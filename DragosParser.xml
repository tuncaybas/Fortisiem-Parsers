<eventParser name="DragosParser">

  <deviceType>
    <Vendor>Dragos</Vendor>
    <Model>Platform</Model>
    <Version>ANY</Version>
  </deviceType>

  <testEvents>
    <testEvent><![CDATA[<13>1 2020-07-02T14:58:31.538019Z dragos dragos_syslog - - system="Dragos Platform" createdAt="2020-07-02T14:58:31Z" summary="Test Message from Dragos App" severity="{severity}" content="This test message was created by the Dragos Syslog App" asset_ip=#"{asset_ip}" asset_hostname="Test" dst_asset_ip="10.0.0.9" dst_asset_hostname="Test" dst_asset_mac="83:77:DB:E3:A3:38" dst_asset_domain="ip-10-10-255-1.ec2.test" src_asset_ip="10.0.0.9" src_asset_hostname="Test" src_asset_mac="89:3A:EE:01:0F:D3" src_asset_domain="ip-10-10-test.ec2.test" id="1234567" asset_domain="ip-10-10-255-1.ec2.test" asset_id="111111" asset_mac="06:92:1C:1B:F2:72" detection_quad="Modeling" detectorId="test-detector-1111" dst_asset_id="333333" matchedRuleId="16" occurredAt="2020-07-02T14:58:31Z" originalSeverity="0" reviewed="False" src_asset_id="222222" type="Test"]]></testEvent>
    <testEvent><![CDATA[<8>May 06 21:06:19 dragos dragos_syslog: CEF:0|Dragos|Platform|1.6|notification|Test Message from Dragos App|5|content=This test message was created by the Dragos Syslog App asset_ip=10.0.0.9 asset_hostname=Test dst_asset_ip=10.0.0.9 dst_asset_hostname=Test dst_asset_mac=9C:B6:TE:ST:4B:95 dst_asset_domain=ip-10-10-255-1.ec2.test src_asset_ip=10.0.0.9 src_asset_hostname=Test src_asset_mac=TE:ST:D0:F2:4B:95 src_asset_domain=ip-10-10-test.ec2.test id=1234567 asset_domain=ip-10-10-255-1.ec2.test asset_id=111111 asset_mac=9C:B6:D0:F2:TE:ST createdAt=2020-05-06T21:06:24Z detection_quad=Indicator detectorId=test-detector-4444 dst_asset_id=333333 matchedRuleId=16 occurredAt=2020-05-06T21:06:24Z originalSeverity=5 reviewed=False src_asset_id=222222 type=Test]]></testEvent>
    <testEvent><![CDATA[<13>Jul 08 07:17:39 dragos dragos_syslog: occurred_at="2021-07-08T07:06:50Z" app="dragos:platform" body="Asset 125 downloaded a file with sha256 hash of c0621954bd329b5cabe45e92b31053627c27fa40853beb2cce2734fa677ffd93 from 130 which matched the APT_HackTool_MSIL_MODIFIEDSHARPVIEW_1 file signature rule." category="A Downloaded file hit on: APT_HackTool_MSIL_MODIFIEDSHARPVIEW_1" created_at="2021-07-08T07:17:39Z" dest="10.10.10.3,10.10.10.14" dest_dragos_id="125" dest_host="batteryews" dest_ip="10.10.10.3,10.10.10.14" dest_mac="00:11:00:11:11:11" dest_name="" dragos_detection_quad="Indicator" dragos_detector_id="" dvc="" dvc_dragos_id="" dvc_host="" dvc_ip="" dvc_mac="" dvc_name="" id="112417" ids_type=network severity_id="0" signature="11111111-1111-1111-1111-111111111111" src="1.1.1.1,10.10.10.11" src_dragos_id="130" src_host="" src_ip="2.2.2.2,10.10.10.11" src_mac="50:DC:E7:21:AA:BB,00:04:2D:05:C4:2B" src_name="" subject="Communication" type="alert" vendor_product="Dragos Platform"]]></testEvent>
  </testEvents>

  <patternDefinitions>
    <pattern name="patExceptPipe"><![CDATA[[^\|]*]]></pattern>
    <pattern name="patMAC"><![CDATA[^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$]]></pattern>
  </patternDefinitions>

  <eventFormatRecognizer><![CDATA[<:gPatHostName>\s+dragos_syslog:?\s+]]></eventFormatRecognizer>

  <parsingInstructions>
    <setEventAttribute attr="eventType">"Dragos-Generic"</setEventAttribute>
    <switch>
      <case>
        <collectFieldsByRegex src="$_rawmsg">
          <regex><![CDATA[<:gPatSyslogPRI>(?:\d+\s+)?(?:<_year:gPatYear>-<_mon:gPatMon>-<_day:gPatDay>T<_time:gPatTimeMSec>\d*<_tz:gPatTimeZone>|<_mon:gPatMon>\s+<_day:gPatDay>\s+<_time:gPatTime>)\s+(?:<reptDevIpAddr:gPatIpAddr>|<reptDevName:gPatHostName>)\s+dragos_syslog:?\s+<_body:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>
        <choose>
          <when test="exist _tz">
            <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_year, $_time, $_tz)</setEventAttribute>
          </when>
          <when test="exist _year">
            <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_year, $_time)</setEventAttribute>
          </when>
          <otherwise>
            <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_time)</setEventAttribute>
          </otherwise>
        </choose>
      </case>
      <case>
        <collectFieldsByRegex src="$_rawmsg">
          <regex><![CDATA[<:gPatSyslogPRI><_mon:gPatMon>\s+<_day:gPatDay>\s+<_time:gPatTime>\s+(?:<reptDevIpAddr:gPatIpAddr>|<reptDevName:gPatHostName>)\s+dragos_syslog:?\s+CEF:\d+\|Dragos\|Platform\|<appVersion:patExceptPipe>\|<category:patExceptPipe>\|<msg:patExceptPipe>\|<severity:gPatInt>\|<_body:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>
        <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_time)</setEventAttribute>
      </case>
      <default/>
    </switch>

    <collectFieldsByKeyValuePair kvsep="=" sep=" " src="$_body">
      <attrKeyMap attr="srcApp" key="system"/>
      <attrKeyMap attr="srcApp" key="app"/>
      <attrKeyMap attr="_createdTime" key="createdAt"/>
      <attrKeyMap attr="_createdTime" key="created_at"/>
      <attrKeyMap attr="details" key="summary"/>
      <attrKeyMap attr="_severity" key="severity"/>
      <attrKeyMap attr="msg" key="content"/>
      <attrKeyMap attr="hostIpAddr" key="asset_ip"/>
      <attrKeyMap attr="hostName" key="asset_hostname"/>
      <attrKeyMap attr="domain" key="asset_domain"/>
      <attrKeyMap attr="hostMACAddr" key="asset_mac"/>
      <attrKeyMap attr="hostId" key="asset_id"/>
      <attrKeyMap attr="srcIpAddr" key="src_asset_ip"/>
      <attrKeyMap attr="srcName" key="src_asset_hostname"/>
      <attrKeyMap attr="srcDomain" key="src_asset_domain"/>
      <attrKeyMap attr="srcMACAddr" key="src_asset_mac"/>
      <attrKeyMap attr="srcId" key="src_asset_id"/>
      <attrKeyMap attr="destIpAddr" key="dst_asset_ip"/>
      <attrKeyMap attr="destName" key="dst_asset_hostname"/>
      <attrKeyMap attr="destDomain" key="dst_asset_domain"/>
      <attrKeyMap attr="destMACAddr" key="dst_asset_mac"/>
      <attrKeyMap attr="destId" key="dst_asset_id"/>
      <attrKeyMap attr="msgId" key="id"/>
      <attrKeyMap attr="detection" key="detection_quad"/>
      <attrKeyMap attr="detectorId" key="detectorId"/>
      <attrKeyMap attr="ruleId" key="matchedRuleId"/>
      <attrKeyMap attr="_occurTime" key="occurredAt"/>
      <attrKeyMap attr="_occurTime" key="occurred_at"/>
      <attrKeyMap attr="type" key="type"/>
      <!-- additional attrib variations in standard syslog format -->
      <attrKeyMap attr="attackTechniqueId" key="attackTechniqueId"/>
      <attrKeyMap attr="attackTactic" key="attackTactic"/>
      <attrKeyMap attr="srcApp" key="app"/>
      <attrKeyMap attr="destId" key="dest_dragos_id"/>
      <attrKeyMap attr="destName" key="dest_host"/>
      <attrKeyMap attr="destIpAddrList" key="dest_ip"/>
      <attrKeyMap attr="_destMACAddr" key="dest_mac"/>
      <attrKeyMap attr="detection" key="dragos_detection_quad"/>
      <attrKeyMap attr="detectorId" key="dragos_detector_id"/>
      <attrKeyMap attr="categoryType" key="ids_type"/>
      <attrKeyMap attr="_severity" key="severity_id"/>
      <attrKeyMap attr="ipsSignatureId" key="signature"/>
      <attrKeyMap attr="srcIpAddrList" key="src"/>
      <attrKeyMap attr="srcName" key="src_host"/>
      <attrKeyMap attr="_srcMACAddr" key="src_mac"/>
      <attrKeyMap attr="subtype" key="subject"/>
      <attrKeyMap attr="msg" key="body"/>
      <attrKeyMap attr="alertCategory" key="category"/>
    </collectFieldsByKeyValuePair>

    <when test="exist detection">
      <choose>
        <when test="exist alertCategory">
          <switch>
            <case>
              <!-- ABB MicroSCADA File(s) Deleted -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ABB MicroSCADA File\(s\) Deleted]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ABBMicroSCADAFilesDeleted")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0809</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- ADDP - Malicious Response to Digi Device Discovery Scan -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ADDP - Malicious Response to Digi Device Discovery Scan]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ADDP-MaliciousResponsetoDigiDeviceDiscoveryScan")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0805</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- Advanced SEL Classification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Advanced SEL Classification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AdvancedSELClassification")</setEventAttribute>
            </case>

            <case>
              <!-- AppleSeed Backdoor C2 -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[AppleSeed Backdoor C2]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AppleSeedBackdoorC2")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- ARP Scan -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ARP Scan]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ARPScan")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- ARP Spoofing -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ARP Spoofing]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ARPSpoofing")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0842</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- ASCII Telnet Commands -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ASCII Telnet Commands]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ASCIITelnetCommands")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- Asset Baseline -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Baseline]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetBaseline")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Classification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Classification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetClassification")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by CDP Platform (Nested) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by CDP Platform \(Nested\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyCDPPlatformNested")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by Connection Port (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by Connection Port \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyConnectionPortDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by HTTP Server (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by HTTP Server \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyHTTPServerDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by HTTP URI (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by HTTP URI \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyHTTPURIDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by HTTP User-Agent (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by HTTP User-Agent \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyHTTPUser-AgentDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by LLDP String (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by LLDP String \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyLLDPStringDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by LLDP String (Nested) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by LLDP String \(Nested\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyLLDPStringNested")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by MMS Domain ID (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by MMS Domain ID \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyMMSDomainIDDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by SMB Browser Server (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by SMB Browser Server \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbySMBBrowserServerDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by SNMP SysDescr (Nested) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by SNMP SysDescr \(Nested\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbySNMPSysDescrNested")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Identification by Vendor (Direct) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Identification by Vendor \(Direct\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetIdentificationbyVendorDirect")</setEventAttribute>
            </case>

            <case>
              <!-- Asset Reconciliation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Asset Reconciliation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AssetReconciliation")</setEventAttribute>
            </case>

            <case>
              <!-- Authentication Brute Force after Command and Control -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Authentication Brute Force after Command and Control]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AuthenticationBruteForceafterCommandandControl")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Authentication Brute Force Attempts -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Authentication Brute Force Attempts]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AuthenticationBruteForceAttempts")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Authentication Brute Force Success -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Authentication Brute Force Success]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AuthenticationBruteForceSuccess")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Authentication to Multiple Hosts -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Authentication to Multiple Hosts]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","AuthenticationtoMultipleHosts")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- BACNet - BVLC Length Field Overflow Exploit -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACNet - BVLC Length Field Overflow Exploit]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACNet-BVLCLengthFieldOverflowExploit")</setEventAttribute>
            </case>

            <case>
              <!-- BACnet App Version -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet App Version]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetAppVersion")</setEventAttribute>
            </case>

            <case>
              <!-- BACnet Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- BACnet Confirmed Private Transfer Length Value Type Error Detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet Confirmed Private Transfer Length Value Type Error Detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetConfirmedPrivateTransferLengthValueTypeErrorDetected")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0827</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- BACnet Device Priority Message -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet Device Priority Message]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetDevicePriorityMessage")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0856</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- BACnet Firmware Revision Detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet Firmware Revision Detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetFirmwareRevisionDetected")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- BACnet Object Name Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet Object Name Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetObjectNameCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- BACnet Router Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BACnet Router Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BACnetRouterIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Baseline Application Value -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Baseline Application Value]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BaselineApplicationValue")</setEventAttribute>
            </case>

            <case>
              <!-- Baseline Asset Protocol -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Baseline Asset Protocol]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BaselineAssetProtocol")</setEventAttribute>
            </case>

            <case>
              <!-- Baseline Communications -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Baseline Communications]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BaselineCommunications")</setEventAttribute>
            </case>

            <case>
              <!-- Baseline Summary -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Baseline Summary]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BaselineSummary")</setEventAttribute>
            </case>

            <case>
              <!-- Beched erg-kz malware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Beched erg-kz malware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Bechederg-kzmalware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0852</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- Beckhoff ADS Logic Change -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Beckhoff ADS Logic Change]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BeckhoffADSLogicChange")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- BLACKENERGY Associated Files -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BLACKENERGY Associated Files]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BLACKENERGYAssociatedFiles")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- BlackEnergy indicators -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[BlackEnergy indicators]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BlackEnergyindicators")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Browser Exploitation Framework (BeEF) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Browser Exploitation Framework \(BeEF\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","BrowserExploitationFrameworkBeEF")</setEventAttribute>
            </case>

            <case>
              <!-- CHRYSENE Beacon Detection Signature -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CHRYSENE Beacon Detection Signature]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CHRYSENEBeaconDetectionSignature")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP-Responder OT Vendor MAC -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP-Responder OT Vendor MAC]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIP-ResponderOTVendorMAC")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Backplane Modules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Backplane Modules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPBackplaneModules")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Command Loop -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Command Loop]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPCommandLoop")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP/PLC CPU Lock -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[<_resource:gPatStr> CPU Lock]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-", $_resource, "CPULock")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP/PLC CPU Unlock -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[<_resource:gPatStr> CPU Unlock]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-", $_resource, "CPUUnlock")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP Date/Time Change -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Date/Time Change]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPDate/TimeChange")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP Error Code Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Error Code Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPErrorCodeAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP Error (Connection Failure) Indicating Communication Issue -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Error (Connection Failure) Indicating Communication Issue]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPErrorCommunicationIssue")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP File Access -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP File Access]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPFileAccess")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0855</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP Firmware Update -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Firmware Update]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPFirmwareUpdate")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- CIP Firmware Update Initiation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Firmware Update Initiation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPFirmwareUpdateInitiation")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- CIP Forced Stop -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Forced Stop]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPForcedStop")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Hardware Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Hardware Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPHardwareAnalysis")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Interface Change -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Interface Change]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPInterfaceChange")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- CIP Key State Change -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Key State Change]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPKeyStateChange")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0858</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- CIP Minor Faults Reset -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Minor Faults Reset]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPMinorFaultsReset")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0878</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- CIP Modify Control Logic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Modify Control Logic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPModifyControlLogic")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- CIP Notification and Concerning Host Attribute -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Notification and Concerning Host Attribute]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPNotificationandConcerningHostAttribute")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Program Download -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Program Download]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPProgramDownload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- CIP Program Upload -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Program Upload]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPProgramUpload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- CIP Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPRequest")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPResponse")</setEventAttribute>
            </case>

            <case>
              <!-- CIP Restart -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Restart]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPRestart")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0816</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- CIP Start Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Start Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPStartRequest")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- CIP Write -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CIP Write]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CIPWrite")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0836</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- Citrix Exploit CVE-2019-19781 -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Citrix Exploit CVE-2019-19781]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CitrixExploitCVE-2019-19781")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Citrix Receiver -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Citrix Receiver]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CitrixReceiver")</setEventAttribute>
            </case>

            <case>
              <!-- Clear Text Authentication QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Clear Text Authentication QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ClearTextAuthenticationQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Cleartext Authentication Failure -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Cleartext Authentication Failure]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CleartextAuthenticationFailure")</setEventAttribute>
            </case>

            <case>
              <!-- Cleartext Authentication Success -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Cleartext Authentication Success]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CleartextAuthenticationSuccess")</setEventAttribute>
            </case>

            <case>
              <!-- Cobalt Strike Lateral Movement Comms -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Cobalt Strike Lateral Movement Comms]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CobaltStrikeLateralMovementComms")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- CobaltStrike Command and Control -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CobaltStrike Command and Control]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CobaltStrikeCommandandControl")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Command and Control after Exploitable File Download -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Command and Control after Exploitable File Download]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CommandandControlafterExploitableFileDownload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Community Detection Rules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Community Detection Rules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CommunityDetectionRules")</setEventAttribute>
            </case>

            <case>
              <!-- Community Rules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Community Rules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CommunityRules")</setEventAttribute>
            </case>

            <case>
              <!-- Compiled Python Executable Yara Rules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Compiled Python Executable Yara Rules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CompiledPythonExecutableYaraRules")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Compiled Python Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Compiled Python Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CompiledPythonTransfer")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Compiled Python Transfer then ICS Protocol -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Compiled Python Transfer then ICS Protocol]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CompiledPythonTransferthenICSProtocol")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Compiled Python Transfer to OT Asset -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Compiled Python Transfer to OT Asset]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CompiledPythonTransfertoOTAsset")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Conficker MS08-067 exploit traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Conficker MS08-067 exploit traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ConfickerMS08-067exploittraffic")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- COTP Connection Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[COTP Connection Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","COTPConnectionRequest")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- COTP Error -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[COTP Error]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","COTPError")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0827</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- COVELLITE Detection - File Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[COVELLITE Detection - File Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","COVELLITEDetection-FileAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Covenant HTTP Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Covenant HTTP Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CovenantHTTPResponse")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- CRASHOVERRIDE Detection - File Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CRASHOVERRIDE Detection - File Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CRASHOVERRIDEDetection-FileAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- CSLIB Point Creation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[CSLIB Point Creation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CSLIBPointCreation")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0836</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- Curate Dashboard Data -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Curate Dashboard Data]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CurateDashboardData")</setEventAttribute>
            </case>

            <case>
              <!-- Curate Database -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Curate Database]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CurateDatabase")</setEventAttribute>
            </case>

            <case>
              <!-- Curate Events Database -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Curate Events Database]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CurateEventsDatabase")</setEventAttribute>
            </case>

            <case>
              <!-- Curate Silent Database -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Curate Silent Database]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CurateSilentDatabase")</setEventAttribute>
            </case>

            <case>
              <!-- Curate Windows Event Index -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Curate Windows Event Index]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","CurateWindowsEventIndex")</setEventAttribute>
            </case>

            <case>
              <!-- DARKSIDE YARA Rules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DARKSIDE YARA Rules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DARKSIDEYARARules")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1570</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- DCSync Operations -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DCSync Operations]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DCSyncOperations")</setEventAttribute>
            </case>

            <case>
              <!-- DCSync Operations - New -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DCSync Operations - New]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DCSyncOperations-New")</setEventAttribute>
            </case>

            <case>
              <!-- Default Credential Use -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Default Credential Use]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DefaultCredentialUse")</setEventAttribute>
            </case>

            <case>
              <!-- Default Community Signature Fired -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Default Community Signature Fired]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DefaultCommunitySignatureFired")</setEventAttribute>
            </case>

            <case>
              <!-- DeltaV Controller Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DeltaV Controller Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DeltaVControllerCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- DeltaV Runtime Recorder Protocol Hardware Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DeltaV Runtime Recorder Protocol Hardware Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DeltaVRuntimeRecorderProtocolHardwareIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- DeltaV Workstation Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DeltaV Workstation Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DeltaVWorkstationCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- DHCP Host Name Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DHCP Host Name Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DHCPHostNameCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Abnormal State -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Abnormal State]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3AbnormalState")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Activate Config -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Activate Config]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3ActivateConfig")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Cold Restart Flood -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Cold Restart Flood]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3ColdRestartFlood")</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Corrupt Configuration -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Corrupt Configuration]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3CorruptConfiguration")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Disable Unsolicited Messages -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Disable Unsolicited Messages]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3DisableUnsolicitedMessages")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0804</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Failed File Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Failed File Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3FailedFileAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Invalid Application Function Code -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Invalid Application Function Code]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3InvalidApplicationFunctionCode")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Invalid Data Link Function Code -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Invalid Data Link Function Code]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3InvalidDataLinkFunctionCode")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Not Acknowledged Error -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Not Acknowledged Error]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3NotAcknowledgedError")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0804</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Open File -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Open File]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3OpenFile")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0873</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Rapid Point Operations -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Rapid Point Operations]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3RapidPointOperations")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0806</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Requests and Masters -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Requests and Masters]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3RequestsandMasters")</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Responses and Field Devices -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Responses and Field Devices]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3ResponsesandFieldDevices")</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Stop Application -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Stop Application]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3StopApplication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Stop Application Flood -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Stop Application Flood]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3StopApplicationFlood")</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Unsolicited Response Flood -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Unsolicited Response Flood]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3UnsolicitedResponseFlood")</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Upload and Activation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Upload and Activation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3UploadandActivation")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0873</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Warm Restart Flood -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Warm Restart Flood]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3WarmRestartFlood")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Write -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Write]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3Write")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- DNP3 Write File -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNP3 Write File]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNP3WriteFile")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0873</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- DNS Domain Entropy -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Domain Entropy]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSDomainEntropy")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- DNS Over TCP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Over TCP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSOverTCP")</setEventAttribute>
            </case>

            <case>
              <!-- DNS Query -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Query]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSQuery")</setEventAttribute>
            </case>

            <case>
              <!-- DNS Query for Internationalized Domain Name (IDN) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Query for Internationalized Domain Name \(IDN\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSQueryforInternationalizedDomainNameIDN")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0817</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- DNS Request - Possible my-sharepoint Spoof -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Request - Possible my-sharepoint Spoof]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSRequest-Possiblemy-sharepointSpoof")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0817</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- DNS Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSResponse")</setEventAttribute>
            </case>

            <case>
              <!-- DNS Response Summarizations -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Response Summarizations]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSResponseSummarizations")</setEventAttribute>
            </case>

            <case>
              <!-- DNS Server Classifier -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Server Classifier]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSServerClassifier")</setEventAttribute>
            </case>

            <case>
              <!-- DNS Zone Transfer Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Zone Transfer Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSZoneTransferIdentification")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- DNS Zone Transfer Request Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DNS Zone Transfer Request Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DNSZoneTransferRequestIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Dragos IOCs: Post-Exploitation Tools -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Dragos IOCs: Post-Exploitation Tools]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DragosIOCs_Post-ExploitationTools")</setEventAttribute>
            </case>

            <case>
              <!-- Dragos Worldview IOC Catalog -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Dragos Worldview IOC Catalog]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DragosWorldviewIOCCatalog")</setEventAttribute>
            </case>

            <case>
              <!-- DYMALLOY Detection - File Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DYMALLOY Detection - File Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DYMALLOYDetection-FileAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- DYMALLOY indicators -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[DYMALLOY indicators]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DYMALLOYindicators")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Dynamic DNS Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Dynamic DNS Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","DynamicDNSIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- EKANS Ransomware Binary -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[EKANS Ransomware Binary]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EKANSRansomwareBinary")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0881</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- ELECTRUM CRASHOVERRIDE Wiper Module -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ELECTRUM CRASHOVERRIDE Wiper Module]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ELECTRUMCRASHOVERRIDEWiperModule")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1499/003</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- Emerson ROC Plus File Delete -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Emerson ROC Plus File Delete]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EmersonROCPlusFileDelete")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0872</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- Emerson ROC Plus File Write -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Emerson ROC Plus File Write]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EmersonROCPlusFileWrite")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0873</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Emerson ROC Plus Write Parameters -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Emerson ROC Plus Write Parameters]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EmersonROCPlusWriteParameters")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0836</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- ENIP Request Identity Command using Nmap -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ENIP Request Identity Command using Nmap]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ENIPRequestIdentityCommandusingNmap")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- EtherNet/IP Hardware Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[EtherNet/IP Hardware Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EtherNet/IPHardwareAnalysis")</setEventAttribute>
            </case>

            <case>
              <!-- EWS Compromise and Changing Program State -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[EWS Compromise and Changing Program State]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EWSCompromiseandChangingProgramState")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- EWS Compromise and Execution through API -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[EWS Compromise and Execution through API]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","EWSCompromiseandExecutionthroughAPI")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0871</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Exaramel Backdoor -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Exaramel Backdoor]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ExaramelBackdoor")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1071</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Executable File Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Executable File Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ExecutableFileTransfer")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Executable File Transfer - Compromised Cert -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Executable File Transfer - Compromised Cert]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ExecutableFileTransfer-CompromisedCert")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Executable File Transfer - Cryptcat -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Executable File Transfer - Cryptcat]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ExecutableFileTransfer-Cryptcat")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Experion SDP Asset Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Experion SDP Asset Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ExperionSDPAssetCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- Exploitable Downloads -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Exploitable Downloads]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ExploitableDownloads")</setEventAttribute>
            </case>

            <case>
              <!-- FactionC2 TLS Cert -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[FactionC2 TLS Cert]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FactionC2TLSCert")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- File - AutoIT Compiled Software -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File - AutoIT Compiled Software]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","File-AutoITCompiledSoftware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- File - HTA with PowerShell -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File - HTA with PowerShell]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","File-HTAwithPowerShell")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- File Download QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File Download QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FileDownloadQFD")</setEventAttribute>
            </case>

            <case>
              <!-- File Download Then New Comms -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File Download Then New Comms]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FileDownloadThenNewComms")</setEventAttribute>
            </case>

            <case>
              <!-- File Downloads -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File Downloads]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FileDownloads")</setEventAttribute>
            </case>

            <case>
              <!-- File Transfer - Malware Assorted Collection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File Transfer - Malware Assorted Collection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FileTransfer-MalwareAssortedCollection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- File Transfer of Suspicious PE -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File Transfer of Suspicious PE]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FileTransferofSuspiciousPE")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- File Transfer with CNIIHM Dev Testbed Strings -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[File Transfer with CNIIHM Dev Testbed Strings]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FileTransferwithCNIIHMDevTestbedStrings")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0874</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- FireEye Red Team Tools File Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[FireEye Red Team Tools File Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FireEyeRedTeamToolsFileSignatures")</setEventAttribute>
            </case>

            <case>
              <!-- FireEye Red Team Tools Network Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[FireEye Red Team Tools Network Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FireEyeRedTeamToolsNetworkSignatures")</setEventAttribute>
            </case>

            <case>
              <!-- Foxboro Model -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Foxboro Model]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FoxboroModel")</setEventAttribute>
            </case>

            <case>
              <!-- Foxboro Translated Unit Names -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Foxboro Translated Unit Names]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FoxboroTranslatedUnitNames")</setEventAttribute>
            </case>

            <case>
              <!-- Foxboro Unit Name -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Foxboro Unit Name]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FoxboroUnitName")</setEventAttribute>
            </case>

            <case>
              <!-- Foxboro Vendor And Role -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Foxboro Vendor And Role]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FoxboroVendorAndRole")</setEventAttribute>
            </case>

            <case>
              <!-- FTP Brute Force Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[FTP Brute Force Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FTPBruteForceAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- FTP SITE EXEC -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[FTP SITE EXEC]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","FTPSITEEXEC")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0807</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Program Upload from PLC -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Program Upload from PLC]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPProgramUploadfromPLC")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP No Privilege for Attempted Operation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP No Privilege for Attempted Operation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPNoPrivilegeforAttemptedOperation")</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Program Download to PLC -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Program Download to PLC]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPProgramDownloadtoPLC")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Read System Memory -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Read System Memory]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPReadSystemMemory")</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Request Only Valid in Programmer Mode -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Request Only Valid in Programmer Mode]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPRequestOnlyValidinProgrammerMode")</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Request only valid in stop mode -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Request only valid in stop mode]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPRequestonlyvalidinstopmode")</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Return Control Program Names -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Return Control Program Names]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPReturnControlProgramNames")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0870</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Stop Start PLC -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Stop Start PLC]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPStopStartPLC")</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Write Program Block Memory -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Write Program Block Memory]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPWriteProgramBlockMemory")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- GE-SRTP Write System Memory -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE-SRTP Write System Memory]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GE-SRTPWriteSystemMemory")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- GE Application Server - iFix SMB Share Tagging -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Application Server - iFix SMB Share Tagging]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEApplicationServer-iFixSMBShareTagging")</setEventAttribute>
            </case>

            <case>
              <!-- GE Application Server Characterization - iFix Server -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Application Server Characterization - iFix Server]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEApplicationServerCharacterization-iFixServer")</setEventAttribute>
            </case>

            <case>
              <!-- GE Device Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Device Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEDeviceCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- GE License Server Characterization - URIs -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE License Server Characterization - URIs]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GELicenseServerCharacterization-URIs")</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Execute Install -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Execute Install]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerExecuteInstall")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Flash Mode -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Flash Mode]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerFlashMode")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0858</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Flash Mode DoS -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Flash Mode DoS]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerFlashModeDoS")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Profinet Alarms Reset -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Profinet Alarms Reset]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerProfinetAlarmsReset")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0878</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Reboot Flood Attack -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Reboot Flood Attack]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerRebootFloodAttack")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Reboots -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Reboots]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerReboots")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller Security State Modification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller Security State Modification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerSecurityStateModification")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0858</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller SIL Lock State Query -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller SIL Lock State Query]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerSILLockStateQuery")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0858</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- GE Mark Controller SIL Unlock Command -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE Mark Controller SIL Unlock Command]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEMarkControllerSILUnlockCommand")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0858</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- GE SDI Workstations -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE SDI Workstations]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GESDIWorkstations")</setEventAttribute>
            </case>

            <case>
              <!-- GE User Agent Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GE User Agent Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GEUserAgentCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- GeoIP QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GeoIP QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GeoIPQFD")</setEventAttribute>
            </case>

            <case>
              <!-- GFX File With Executable Content -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GFX File With Executable Content]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GFXFileWithExecutableContent")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- GOOSE Device Requires Commissioning -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GOOSE Device Requires Commissioning]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GOOSEDeviceRequiresCommissioning")</setEventAttribute>
            </case>

            <case>
              <!-- GOOSE Reference Identity -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GOOSE Reference Identity]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GOOSEReferenceIdentity")</setEventAttribute>
            </case>

            <case>
              <!-- Goose Summarization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Goose Summarization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GooseSummarization")</setEventAttribute>
            </case>

            <case>
              <!-- GOOSE Test Packet -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GOOSE Test Packet]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GOOSETestPacket")</setEventAttribute>
            </case>

            <case>
              <!-- GREYENERGY DNS Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GREYENERGY DNS Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GREYENERGYDNSRequest")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- GREYENERGY Dropper Variant -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GREYENERGY Dropper Variant]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GREYENERGYDropperVariant")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1071</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- GREYENERGY HTTP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GREYENERGY HTTP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GREYENERGYHTTP")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- GREYENERGY Malware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[GREYENERGY Malware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","GREYENERGYMalware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1071</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Hardware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Hardware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Hardware")</setEventAttribute>
            </case>

            <case>
              <!-- HART-IP buffer overflow attempt -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HART-IP buffer overflow attempt]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HART-IPbufferoverflowattempt")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- Havex Domain -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Havex Domain]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HavexDomain")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- HAVEX HTTP C2 Detection - WordPress BuddyPress -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HAVEX HTTP C2 Detection - WordPress BuddyPress]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HAVEXHTTPC2Detection-WordPressBuddyPress")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- HAVEX HTTP C2 QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HAVEX HTTP C2 QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HAVEXHTTPC2QFD")</setEventAttribute>
            </case>

            <case>
              <!-- HAVEX HTTP C2 Response Detection - WordPress BuddyPress -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HAVEX HTTP C2 Response Detection - WordPress BuddyPress]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HAVEXHTTPC2ResponseDetection-WordPressBuddyPress")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- HAVEX HTTP C2 Response Detection Success - WordPress BuddyPress -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HAVEX HTTP C2 Response Detection Success - WordPress BuddyPress]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HAVEXHTTPC2ResponseDetectionSuccess-WordPressBuddyPress")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Havex ICS Scanner -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Havex ICS Scanner]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HavexICSScanner")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0808</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- HEXANE Backdoors -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HEXANE Backdoors]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HEXANEBackdoors")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1105</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- HEXANE Maldoc -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HEXANE Maldoc]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HEXANEMaldoc")</setEventAttribute>
            </case>

            <case>
              <!-- HMI Administration Access -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HMI Administration Access]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HMIAdministrationAccess")</setEventAttribute>
            </case>

            <case>
              <!-- HMI Discovery and Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HMI Discovery and Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HMIDiscoveryandAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Honeywell Control Module Download -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Honeywell Control Module Download]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HoneywellControlModuleDownload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- Honeywell Controller Firmware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Honeywell Controller Firmware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HoneywellControllerFirmware")</setEventAttribute>
            </case>

            <case>
              <!-- Honeywell DSA Primary CPU Change -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Honeywell DSA Primary CPU Change]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HoneywellDSAPrimaryCPUChange")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Honeywell Unit Name -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Honeywell Unit Name]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HoneywellUnitName")</setEventAttribute>
            </case>

            <case>
              <!-- HTTP Authentication Failure -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP Authentication Failure]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPAuthenticationFailure")</setEventAttribute>
            </case>

            <case>
              <!-- HTTP Authentication Success -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP Authentication Success]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPAuthenticationSuccess")</setEventAttribute>
            </case>

            <case>
              <!-- HTTP CONNECT External - First Seen -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP CONNECT External - First Seen]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPCONNECTExternal-FirstSeen")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0884</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- HTTP Image Request Direct to IP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP Image Request Direct to IP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPImageRequestDirecttoIP")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- HTTP Request for Suspicious File Extension -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP Request for Suspicious File Extension]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPRequestforSuspiciousFileExtension")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0865</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- HTTP SQL Injection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP SQL Injection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPSQLInjection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0819</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- HTTP Tagging -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP Tagging]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPTagging")</setEventAttribute>
            </case>

            <case>
              <!-- HTTP Tunnel Discovery QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HTTP Tunnel Discovery QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HTTPTunnelDiscoveryQFD")</setEventAttribute>
            </case>

            <case>
              <!-- HttpFileServer HFS Server Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[HttpFileServer HFS Server Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","HttpFileServerHFSServerResponse")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- ICMP Flood -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ICMP Flood]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ICMPFlood")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- ICMP Sweep -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ICMP Sweep]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ICMPSweep")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- ICS Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ICS Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ICSCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- Identify NTP Traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Identify NTP Traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IdentifyNTPTraffic")</setEventAttribute>
            </case>

            <case>
              <!-- iDRAC Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[iDRAC Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","iDRACCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- IEC104 File Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[IEC104 File Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IEC104FileTransfer")</setEventAttribute>
            </case>

            <case>
              <!-- IEC 104 Corrupt U-Frame -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[IEC 104 Corrupt U-Frame]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IEC104CorruptU-Frame")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0806</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- IEC 104 Device Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[IEC 104 Device Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IEC104DeviceIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- IEC 61850 Discovery then Connect -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[IEC 61850 Discovery then Connect]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IEC61850DiscoverythenConnect")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0808</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Insecure Behavior -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Insecure Behavior]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","InsecureBehavior")</setEventAttribute>
            </case>

            <case>
              <!-- Interactive Session -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Interactive Session]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","InteractiveSession")</setEventAttribute>
            </case>

            <case>
              <!-- Interactive Session Pivot -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Interactive Session Pivot]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","InteractiveSessionPivot")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0822</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Interactive Session QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Interactive Session QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","InteractiveSessionQFD")</setEventAttribute>
            </case>

            <case>
              <!-- IP Tunneling with Fragmented UDP Packets -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[IP Tunneling with Fragmented UDP Packets]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IPTunnelingwithFragmentedUDPPackets")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0813</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- IPv6 DNS Change -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[IPv6 DNS Change]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","IPv6DNSChange")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Jump Host -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Jump Host]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","JumpHost")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0822</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Jump Host First Seen -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Jump Host First Seen]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","JumpHostFirstSeen")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0822</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Karagany MCMD malware indicators. -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Karagany MCMD malware indicators.]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","KaraganyMCMDmalwareindicators.")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Known Files Heuristics -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Known Files Heuristics]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","KnownFilesHeuristics")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Koadic C3 Framework Network Traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Koadic C3 Framework Network Traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","KoadicC3FrameworkNetworkTraffic")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- LDAP Based Recon -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[LDAP Based Recon]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","LDAPBasedRecon")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1087</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Legacy Havex indicators -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Legacy Havex indicators]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","LegacyHavexindicators")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- LLDP Attributes -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[LLDP Attributes]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","LLDPAttributes")</setEventAttribute>
            </case>

            <case>
              <!-- LLDP Summarization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[LLDP Summarization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","LLDPSummarization")</setEventAttribute>
            </case>

            <case>
              <!-- Login Spoofing for ICS Vendors -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Login Spoofing for ICS Vendors]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","LoginSpoofingforICSVendors")</setEventAttribute>
            </case>

            <case>
              <!-- MAC Vendor -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MAC Vendor]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MACVendor")</setEventAttribute>
            </case>

            <case>
              <!-- Merge Dual Homed Assets -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Merge Dual Homed Assets]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MergeDualHomedAssets")</setEventAttribute>
            </case>

            <case>
              <!-- MAGNALLIUM Detection - File Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MAGNALLIUM Detection - File Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MAGNALLIUMDetection-FileAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Merge Single Source IP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Merge Single Source IP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MergeSingleSourceIP")</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit Bind Shell and Reverse Bind Shell -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit Bind Shell and Reverse Bind Shell]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MetasploitBindShellandReverseBindShell")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit CIP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit CIP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MetasploitCIP")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit invalid PE payload -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit invalid PE payload]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MetasploitinvalidPEpayload")</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit Login Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit Login Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MetasploitLoginDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit/Meterpreter C2 -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit/Meterpreter C2]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Metasploit/MeterpreterC2")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit PDF Trojan -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit PDF Trojan]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MetasploitPDFTrojan")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit Phoenix Contact PLC stop sequence -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit Phoenix Contact PLC stop sequence]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MetasploitPhoenixContactPLCstopsequence")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Metasploit signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Metasploit signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Metasploitsignatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0807</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Micom P543 MMS Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Micom P543 MMS Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MicomP543MMSIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- MicroSCADA process stop batch script -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MicroSCADA process stop batch script]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MicroSCADAprocessstopbatchscript")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0881</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- Mimikatz File Transfer and Outputs -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Mimikatz File Transfer and Outputs]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MimikatzFileTransferandOutputs")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Mimikatz File Transfer via SMB -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Mimikatz File Transfer via SMB]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MimikatzFileTransferviaSMB")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Minestar Operator and Location Parsing -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Minestar Operator and Location Parsing]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MinestarOperatorandLocationParsing")</setEventAttribute>
            </case>

            <case>
              <!-- MMS Delete Program Invocation Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Delete Program Invocation Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSDeleteProgramInvocationDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0809</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- MMS Device Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Device Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSDeviceIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- MMS Domain Deletion -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Domain Deletion]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSDomainDeletion")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0809</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- MMS Domain Download Initiation Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Domain Download Initiation Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSDomainDownloadInitiationDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- MMS Domain Upload Initiation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Domain Upload Initiation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSDomainUploadInitiation")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- MMS Get Active Alarms Summary Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Get Active Alarms Summary Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSGetActiveAlarmsSummaryDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0802</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- MMS Kill Program Invocation Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Kill Program Invocation Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSKillProgramInvocationDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0881</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- MMS Software Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Software Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSSoftwareIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- MMS Take Control Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Take Control Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSTakeControlRequest")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0831</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- MMS Threat Hunting QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MMS Threat Hunting QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MMSThreatHuntingQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Modbus Exception -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Modbus Exception]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ModbusException")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Modbus External Comms -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Modbus External Comms]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ModbusExternalComms")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0808</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Modbus External Write -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Modbus External Write]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ModbusExternalWrite")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0808</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Moxa Router HTTP Login -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Moxa Router HTTP Login]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MoxaRouterHTTPLogin")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Moxa Router HTTP Stored XSS -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Moxa Router HTTP Stored XSS]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MoxaRouterHTTPStoredXSS")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Moxa Service Agent Authentication Bypass -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Moxa Service Agent Authentication Bypass]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MoxaServiceAgentAuthenticationBypass")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Moxa Service Agent Login Attempt -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Moxa Service Agent Login Attempt]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MoxaServiceAgentLoginAttempt")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- MS 17-010 DoublePulsar Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MS 17-010 DoublePulsar Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MS17-010DoublePulsarDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- MS 17-010 Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MS 17-010 Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MS17-010Signatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- MS 17-010 WannaCry Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MS 17-010 WannaCry Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MS17-010WannaCryDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- MS SQL Server OS Commands -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[MS SQL Server OS Commands]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MSSQLServerOSCommands")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0810</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- Multiple Program Uploads -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Multiple Program Uploads]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","MultipleProgramUploads")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- Name Service Response Hostname Associations -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Name Service Response Hostname Associations]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NameServiceResponseHostnameAssociations")</setEventAttribute>
            </case>

            <case>
              <!-- Nessus Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Nessus Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NessusSignatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Net.exe Commands -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Net.exe Commands]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Net.exeCommands")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1087</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Netbox.cn Web Server Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Netbox.cn Web Server Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Netbox.cnWebServerResponse")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- NetExec Lateral Movement -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NetExec Lateral Movement]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NetExecLateralMovement")</setEventAttribute>
            </case>

            <case>
              <!-- Network Device Access -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Network Device Access]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NetworkDeviceAccess")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Network Devices Access - New -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Network Devices Access - New]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NetworkDevicesAccess-New")</setEventAttribute>
            </case>

            <case>
              <!-- New CIP Device Identity -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New CIP Device Identity]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewCIPDeviceIdentity")</setEventAttribute>
            </case>

            <case>
              <!-- New CIP Traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New CIP Traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewCIPTraffic")</setEventAttribute>
            </case>

            <case>
              <!-- New Communication Pairing -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Communication Pairing]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewCommunicationPairing")</setEventAttribute>
            </case>

            <case>
              <!-- New Default Credential Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Default Credential Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDefaultCredentialDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- New Destination Ethernet Address Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Destination Ethernet Address Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDestinationEthernetAddressDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Destination IP Address Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Destination IP Address Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDestinationIPAddressDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New DNP3 Guest Access to Outstation File System -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New DNP3 Guest Access to Outstation File System]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDNP3GuestAccesstoOutstationFileSystem")</setEventAttribute>
            </case>

            <case>
              <!-- New DNP3 Master Communication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New DNP3 Master Communication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDNP3MasterCommunication")</setEventAttribute>
            </case>

            <case>
              <!-- New DNP3 Outstation Communication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New DNP3 Outstation Communication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDNP3OutstationCommunication")</setEventAttribute>
            </case>

            <case>
              <!-- New DNS Query Name Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New DNS Query Name Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewDNSQueryNameDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New ENIP Communication Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New ENIP Communication Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewENIPCommunicationDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Ethernet/IP Device Identity -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Ethernet/IP Device Identity]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewEthernet/IPDeviceIdentity")</setEventAttribute>
            </case>

            <case>
              <!-- New Global User Agent Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Global User Agent Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewGlobalUserAgentDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New GOOSE Device Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New GOOSE Device Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewGOOSEDeviceDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Honeywell SMB Communication Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Honeywell SMB Communication Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewHoneywellSMBCommunicationDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New HTTP Tunnel Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New HTTP Tunnel Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewHTTPTunnelDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Let's Encrypt Certificate Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Let's Encrypt Certificate Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewLetsEncryptCertificateDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New ModbusTCP Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New ModbusTCP Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewModbusTCPDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Nessus Scanner Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Nessus Scanner Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewNessusScannerDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New NetBIOS Query Name Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New NetBIOS Query Name Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewNetBIOSQueryNameDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Nikto Scanner Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Nikto Scanner Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewNiktoScannerDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- New Nmap Scanner Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Nmap Scanner Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewNmapScannerDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Ovation 5230 Messages Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Ovation 5230 Messages Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewOvation5230MessagesDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Process Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Process Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewProcessDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Proxy Server Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Proxy Server Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewProxyServerDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0830</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- New RDP Communication Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New RDP Communication Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewRDPCommunicationDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New SMB Communication Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New SMB Communication Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewSMBCommunicationDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New SNMP Communication Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New SNMP Communication Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewSNMPCommunicationDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Source Ethernet Address Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Source Ethernet Address Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewSourceEthernetAddressDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Source IP Address Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Source IP Address Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewSourceIPAddressDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Tristation Device Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Tristation Device Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewTristationDeviceDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New User Agent Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New User Agent Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewUserAgentDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New Vnet/IP Communication Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New Vnet/IP Communication Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewVnet/IPCommunicationDetection")</setEventAttribute>
            </case>

            <case>
              <!-- New X509 Certificate Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[New X509 Certificate Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NewX509CertificateDetection")</setEventAttribute>
            </case>

            <case>
              <!-- NineProxy Malware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NineProxy Malware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NineProxyMalware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Nmap detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Nmap detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NmapDetected")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Nmap Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Nmap Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NmapSignatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Nortel Chassis Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Nortel Chassis Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NortelChassisIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Norxa Malware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Norxa Malware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NorxaMalware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- NTLM Account Disabled -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NTLM Account Disabled]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NTLMAccountDisabled")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- NTLM Anonymous Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NTLM Anonymous Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NTLMAnonymousAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- NTP Abuse -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NTP Abuse]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NTPAbuse")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- NTLM Authentication Failure -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NTLM Authentication Failure]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NTLMAuthenticationFailure")</setEventAttribute>
            </case>

            <case>
              <!-- NTLM Authentication Success -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NTLM Authentication Success]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NTLMAuthenticationSuccess")</setEventAttribute>
            </case>

            <case>
              <!-- NTP Server Classifier -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[NTP Server Classifier]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","NTPServerClassifier")</setEventAttribute>
            </case>

            <case>
              <!-- OASyS DNA Hostname -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[OASyS DNA Hostname]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OASySDNAHostname")</setEventAttribute>
            </case>

            <case>
              <!-- Obfuscated File -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Obfuscated File]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ObfuscatedFile")</setEventAttribute>
            </case>

            <case>
              <!-- Obfuscated File - Yara Rules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Obfuscated File - Yara Rules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ObfuscatedFile-YaraRules")</setEventAttribute>
            </case>

            <case>
              <!-- OPC Device Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[OPC Device Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OPCDeviceIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Operating System Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Operating System Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OperatingSystemCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- OsiSoft EventFrame Notification QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[OsiSoft EventFrame Notification QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OsiSoftEventFrameNotificationQFD")</setEventAttribute>
            </case>

            <case>
              <!-- OsiSoft EventFrame QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[OsiSoft EventFrame QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OsiSoftEventFrameQFD")</setEventAttribute>
            </case>

            <case>
              <!-- OT Vendor Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[OT Vendor Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OTVendorIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Ovation Database Server Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Ovation Database Server Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OvationDatabaseServerIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Ovation Host Name -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Ovation Host Name]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","OvationHostName")</setEventAttribute>
            </case>

            <case>
              <!-- Packed File -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Packed File]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PackedFile")</setEventAttribute>
            </case>

            <case>
              <!-- Packed File - Yara Rules -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Packed File - Yara Rules]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PackedFile-YaraRules")</setEventAttribute>
            </case>

            <case>
              <!-- PCCC Diagnostic Message Data -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PCCC Diagnostic Message Data]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PCCCDiagnosticMessageData")</setEventAttribute>
            </case>

            <case>
              <!-- Periodic Beacon -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Periodic Beacon]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PeriodicBeacon")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Periodic Beaconing -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Periodic Beaconing]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PeriodicBeaconing")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Phoenix Contact Firmware Update -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Phoenix Contact Firmware Update]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PhoenixContactFirmwareUpdate")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Phoenix Contact ILC191 PLC Remote Reboot Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Phoenix Contact ILC191 PLC Remote Reboot Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PhoenixContactILC191PLCRemoteRebootDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Phoenix Contact PLC Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Phoenix Contact PLC Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PhoenixContactPLCCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- Phoenix Contact PLC Program Write Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Phoenix Contact PLC Program Write Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PhoenixContactPLCProgramWriteDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0833</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impair Process Control</setEventAttribute>
            </case>

            <case>
              <!-- Phoenix Contact PLC Reset Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Phoenix Contact PLC Reset Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PhoenixContactPLCResetDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Phoenix Contact PLC Stop Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Phoenix Contact PLC Stop Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PhoenixContactPLCStopDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- PLC Classifier -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PLC Classifier]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PLCClassifier")</setEventAttribute>
            </case>

            <case>
              <!-- PLC Write -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PLC Write]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PLCWrite")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- PlugX Malware Possible C2 404 Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PlugX Malware Possible C2 404 Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PlugXMalwarePossibleC2404Response")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- PoetRAT Dropper -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PoetRAT Dropper]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PoetRATDropper")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0865</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- Port Protocol Mismatch -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Port Protocol Mismatch]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PortProtocolMismatch")</setEventAttribute>
            </case>

            <case>
              <!-- Port Scan -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Port Scan]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PortScan")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Port Sweep -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Port Sweep]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PortSweep")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Port Sweep - ICS Ports -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Port Sweep - ICS Ports]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PortSweep-ICSPorts")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Port Sweep Then Scan -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Port Sweep Then Scan]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PortSweepThenScan")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0841</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Possible ARP scanning detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Possible ARP scanning detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PossibleARPScanningDetected")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Possible CobaltStrike C2 -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Possible CobaltStrike C2]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PossibleCobaltStrikeC2")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- PowerLogic EGX IP Filtering Manipulation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PowerLogic EGX IP Filtering Manipulation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowerLogicEGXIPFilteringManipulation")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- PowerLogic HTTP Backdoor -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PowerLogic HTTP Backdoor]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowerLogicHTTPBackdoor")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- PowerShell - User Agent -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PowerShell - User Agent]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowerShell-UserAgent")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- PowerShell - WinRM Enable -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PowerShell - WinRM Enable]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowerShell-WinRMEnable")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0807</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Powershell Empire C2 -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Powershell Empire C2]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowershellEmpireC2")</setEventAttribute>
            </case>

            <case>
              <!-- Powershell Empire File Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Powershell Empire File Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowershellEmpireFileDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- PowerShell Empire HTTP Requests Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PowerShell Empire HTTP Requests Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowerShellEmpireHTTPRequestsSignatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Powershell Empire Recon Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Powershell Empire Recon Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PowershellEmpireReconDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1087</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- POWERTON User Agent -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[POWERTON User Agent]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","POWERTONUserAgent")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Precision Time Protocol Vendor Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Precision Time Protocol Vendor Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PrecisionTimeProtocolVendorIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Profinet MRP Vendor Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Profinet MRP Vendor Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ProfinetMRPVendorIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Program Upload over CIP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Program Upload over CIP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ProgramUploadOverCIP")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- PsExec Embedded in Executable -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PsExec Embedded in Executable]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PsExecEmbeddedinExecutable")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- PsExec Lateral Movement -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PsExec Lateral Movement]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PsExecLateralMovement")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0807</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- PsExec Service Created -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[PsExec Service Created]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PsExecServiceCreated")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0822</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Pudshell Malware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Pudshell Malware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PudshellMalware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- pycomm3 Generated CIP Traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[pycomm3 Generated CIP Traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","pycomm3GeneratedCIPTraffic")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- pycomm3 Installed/In Use -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[pycomm3 Installed/In Use]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","pycomm3Installed/InUse")</setEventAttribute>
            </case>

            <case>
              <!-- Pylogix Installed/In Use -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Pylogix Installed/In Use]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PylogixInstalled/InUse")</setEventAttribute>
            </case>

            <case>
              <!-- Pylogix Use Detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Pylogix Use Detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","PylogixUseDetected")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0853</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Radius Authentication Failure -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Radius Authentication Failure]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RadiusAuthenticationFailure")</setEventAttribute>
            </case>

            <case>
              <!-- Radius Authentication Success -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Radius Authentication Success]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RadiusAuthenticationSuccess")</setEventAttribute>
            </case>

            <case>
              <!-- Raindrop Loader -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Raindrop Loader]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RaindropLoader")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0849</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- RDP Handshake Tunneled -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP Handshake Tunneled]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPHandshakeTunneled")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- RDP Multiple User Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP Multiple User Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPMultipleUserAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- RDP Negotiation Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP Negotiation Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPNegotiationRequest")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- RDP Pivot -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP Pivot]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPPivot")</setEventAttribute>
            </case>

            <case>
              <!-- RDP Port Mismatch -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP Port Mismatch]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPPortMismatch")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- RDP QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPQFD")</setEventAttribute>
            </case>

            <case>
              <!-- RDP RCE Vulnerability (CVE-2019-0708) -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP RCE Vulnerability \(CVE-2019-0708\)]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPRCEVulnerabilityCVE-2019-0708")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- RDP Sweep -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP Sweep]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDPSweep")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- RDP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RDP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RDP")</setEventAttribute>
            </case>

            <case>
              <!-- reGeorg Tunnel -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[reGeorg Tunnel]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","reGeorgTunnel")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0884</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- related indicator detected in the environment -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[<swProcName:gPatStr> related indicator detected in the environment]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-",$swProcName, "DetectedInEnv")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0884</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Remote Access QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Remote Access QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RemoteAccessQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Remote File Copy -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Remote File Copy]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RemoteFileCopy")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Right-to-left override (RTLO) filename extension -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Right-to-left override \(RTLO\) filename extension]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Right-to-leftoverrideRTLOfilenameextension")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0849</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- Rimex TyreSense Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Rimex TyreSense Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RimexTyreSenseCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- Rockwell AssetCentre Logs QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Rockwell AssetCentre Logs QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RockwellAssetCentreLogsQFD")</setEventAttribute>
            </case>

            <case>
              <!-- RSLinx and FactoryTalk Proof of Concept Attacks -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RSLinx and FactoryTalk Proof of Concept Attacks]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RSLinxandFactoryTalkProofofConceptAttacks")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- RuggedCom Backdoor -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[RuggedCom Backdoor]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","RuggedComBackdoor")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0812</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- S7Comm PLC Block Download -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[S7Comm Block Download]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","S7CommPLCBlockDownload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- S7Comm Firmware Activation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[S7Comm Firmware Activation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","S7CommFirmwareActivation")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0857</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- S7Comm PLC Program Upload -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[S7Comm Program Upload]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","S7CommPLCProgramUpload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- S7Comm PLC Start -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[S7Comm PLC Start]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","S7CommPLCStart")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- S7Comm PLC Stop -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[S7Comm PLC Stop]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","S7CommPLCStop")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Safety System File Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Safety System File Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SafetySystemFileTransfer")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0880</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- Scan Sequential -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Scan Sequential]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ScanSequential")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Scanning QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Scanning QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ScanningQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Schneider Modicon Modbus Denial of Service -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Schneider Modicon Modbus Denial of Service]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SchneiderModiconModbusDenialofService")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity Logic Download -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity Logic Download]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityLogicDownload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity Logic Upload -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity Logic Upload]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityLogicUpload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity PLC Force Value -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity PLC Force Value]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityPLCForceValue")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0831</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity PLC Stop -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity PLC Stop]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityPLCStop")</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity Program Download -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity Program Download]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityProgramDownload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0843</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- SE Unity Program Upload -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SE Unity Program Upload]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SEUnityProgramUpload")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0845</setEventAttribute>
              <setEventAttribute attr="attackTactic">Collection</setEventAttribute>
            </case>

            <case>
              <!-- Seimens SIPROTEC Remote DoS PoC -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Seimens SIPROTEC Remote DoS PoC]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SeimensSIPROTECRemoteDoSPoC")</setEventAttribute>
            </case>

            <case>
              <!-- Sensor Reporter Log QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Sensor Reporter Log QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SensorReporterLogQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Server Stats -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Server Stats]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ServerStats")</setEventAttribute>
            </case>

            <case>
              <!-- Sequential Scan Detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Sequential Scan Detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SequentialScanDetected")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1046</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Siemens SCALANCE X Hardcoded X.509 Certificate -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Siemens SCALANCE X Hardcoded X.509 Certificate]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SiemensSCALANCEXHardcodedX.509Certificate")</setEventAttribute>
            </case>

            <case>
              <!-- SMB QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Sliver C2 HTTP Requests -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Sliver C2 HTTP Requests]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SliverC2HTTPRequests")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- SMB AddPrinterDriverEx Request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB AddPrinterDriverEx Request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBAddPrinterDriverExRequest")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- SMB Administrative Share Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Administrative Share Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBAdministrativeShareCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- SMB Browser -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Browser]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBBrowser")</setEventAttribute>
            </case>

            <case>
              <!-- SMB Credential Harvesting -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Credential Harvesting]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBCredentialHarvesting")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0842</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- SMB External Resource Access -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB External Resource Access]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBExternalResourceAccess")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0822</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- SMB File Transfers -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB File Transfers]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBFileTransfers")</setEventAttribute>
            </case>

            <case>
              <!-- SMB Lateral Movement Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Lateral Movement Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBLateralMovementSignatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- SMB Share Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Share Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBShareCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- SMB Version 1 Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Version 1 Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBVersion1Characterization")</setEventAttribute>
            </case>

            <case>
              <!-- SMB Volume Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMB Volume Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMBVolumeAnalysis")</setEventAttribute>
            </case>

            <case>
              <!-- SMTP Blocklist Message Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SMTP Blocklist Message Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SMTPBlocklistMessageDetection")</setEventAttribute>
            </case>

            <case>
              <!-- SNMP Asset Information -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SNMP Asset Information]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SNMPAssetInformation")</setEventAttribute>
            </case>

            <case>
              <!-- SNMP OID Vendor Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SNMP OID Vendor Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SNMPOIDVendorIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- SNMP QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SNMP QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SNMPQFD")</setEventAttribute>
            </case>

            <case>
              <!-- SNMP Version 1 Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SNMP Version 1 Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SNMPVersion1Identification")</setEventAttribute>
            </case>

            <case>
              <!-- SNMP Version 2 Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SNMP Version 2 Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SNMPVersion2Identification")</setEventAttribute>
            </case>

            <case>
              <!-- SNMP Version 3 Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SNMP Version 3 Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SNMPVersion3Identification")</setEventAttribute>
            </case>

            <case>
              <!-- SolarWinds Scanner -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SolarWinds Scanner]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SolarWindsScanner")</setEventAttribute>
            </case>

            <case>
              <!-- SolarWinds Scanner IDS Signature -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SolarWinds Scanner IDS Signature]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SolarWindsScannerIDSSignature")</setEventAttribute>
            </case>

            <case>
              <!-- Spearphishing Attachment -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Spearphishing Attachment]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SpearphishingAttachment")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0865</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- Specific Registry Values set to Null -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Specific Registry Values set to Null]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SpecificRegistryValuessettoNull")</setEventAttribute>
            </case>

            <case>
              <!-- Squid Proxy Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Squid Proxy Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SquidProxyIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- SSH Authentication Failure -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Authentication Failure]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHAuthenticationFailure")</setEventAttribute>
            </case>

            <case>
              <!-- SSH Authentication Success -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Authentication Success]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHAuthenticationSuccess")</setEventAttribute>
            </case>

            <case>
              <!-- SSH Bitvise Server On Nonstandard Port -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Bitvise Server On Nonstandard Port]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHBitviseServerOnNonstandardPort")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0822</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- SSH Brute Force Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Brute Force Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHBruteForceAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- SSH Interesting Hostname Login Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Interesting Hostname Login Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHInterestingHostnameLoginDetection")</setEventAttribute>
            </case>

            <case>
              <!-- SSH Northbound -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Northbound]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHNorthbound")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- SSH Reverse Tunnel -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Reverse Tunnel]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHReverseTunnel")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- SSH Session Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSH Session Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSHSessionCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- SSL Certificate Configuration Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SSL Certificate Configuration Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SSLCertificateConfigurationIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- (Re)Start Command Issued to PLC over CIP -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[<_start:gPatStr> Command Issued to PLC over CIP]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-", $_start, "CmdIssuedToPLCOverCIP")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- STIBNITE malware implants, pypykatz and LaZagne -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[STIBNITE malware implants, pypykatz and LaZagne]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","STIBNITEmalwareimplants,pypykatzandLaZagne")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1003</setEventAttribute>
              <setEventAttribute attr="attackTactic">Credential Access</setEventAttribute>
            </case>

            <case>
              <!-- Stuxnet indicators -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Stuxnet indicators]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Stuxnetindicators")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Successful Brute Force Logon -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Successful Brute Force Logon]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuccessfulBruteForceLogon")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1110</setEventAttribute>
              <setEventAttribute attr="attackTactic">Credential Access</setEventAttribute>
            </case>

            <case>
              <!-- SUNBURST and Associated Files -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SUNBURST and Associated Files]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SUNBURSTandAssociatedFiles")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- SUNBURST IDS Signatures -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SUNBURST IDS Signatures]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SUNBURSTIDSSignatures")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- SUNSPOT Builder -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[SUNSPOT Builder]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SUNSPOTBuilder")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1053/005</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- suspicious .xxx file download request -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[suspicious \.<fileExt:gPatStr> file download request]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuspiciousFileDownloadReq")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Suspicious File Then C2 -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Suspicious File Then C2]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuspiciousFileThenC2")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Suspicious File Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Suspicious File Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuspiciousFileTransfer")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Suspicious File Transfer, C2, and PLC Impairment -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Suspicious File Transfer, C2, and PLC Impairment]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuspiciousFileTransfer,C2,andPLCImpairment")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Suspicious GeoIP Country QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Suspicious GeoIP Country QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuspiciousGeoIPCountryQFD")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0817</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- Suspicous Domains -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Suspicous Domains]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SuspicousDomains")</setEventAttribute>
            </case>

            <case>
              <!-- Sykipot Malware Suspicious Traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Sykipot Malware Suspicious Traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SykipotMalwareSuspiciousTraffic")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Symantec Endpoint Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Symantec Endpoint Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SymantecEndpointDetection")</setEventAttribute>
            </case>

            <case>
              <!-- Syslog Alerts -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Syslog Alerts]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SyslogAlerts")</setEventAttribute>
            </case>

            <case>
              <!-- Syslog QFD Vendor and Model Enrichment -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Syslog QFD Vendor and Model Enrichment]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SyslogQFDVendorandModelEnrichment")</setEventAttribute>
            </case>

            <case>
              <!-- Sysmon MITRE ATTACK Rule Triggered -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Sysmon MITRE ATTACK Rule Triggered]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","SysmonMITREATTACKRuleTriggered")</setEventAttribute>
            </case>

            <case>
              <!-- Tags QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tags QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TagsQFD")</setEventAttribute>
            </case>

            <case>
              <!-- TDS Commands -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[TDS Commands]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TDSCommands")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0810</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- TDS QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[TDS QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TDSQFD")</setEventAttribute>
            </case>

            <case>
              <!-- TeamViewer Access then PLC Action -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[TeamViewer Access then PLC Action]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TeamViewerAccessthenPLCAction")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- TeamViewer Traffic to OT Device -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[TeamViewer Traffic to OT Device]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TeamViewerTraffictoOTDevice")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0818</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- Telnet Tagging -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Telnet Tagging]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TelnetTagging")</setEventAttribute>
            </case>

            <case>
              <!-- Test Message from Dragos App -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Test Message from Dragos App]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TestMsgFromDragosApp")</setEventAttribute>
            </case>

            <case>
              <!-- Tofino Security Appliance Failed Authentication -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tofino Security Appliance Failed Authentication]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TofinoSecurityApplianceFailedAuthentication")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Tofino Security Appliance in Decommissioned Mode -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tofino Security Appliance in Decommissioned Mode]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TofinoSecurityApplianceinDecommissionedMode")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0847</setEventAttribute>
              <setEventAttribute attr="attackTactic">Initial Access</setEventAttribute>
            </case>

            <case>
              <!-- Traffic Volume Summarization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Traffic Volume Summarization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TrafficVolumeSummarization")</setEventAttribute>
            </case>

            <case>
              <!-- Transient Device Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Transient Device Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TransientDeviceIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Triconex Broadcast Ping -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Triconex Broadcast Ping]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TriconexBroadcastPing")</setEventAttribute>
            </case>

            <case>
              <!-- Triconex Controller Discovery -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Triconex Controller Discovery]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TriconexControllerDiscovery")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Triconex Ping Response -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Triconex Ping Response]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TriconexPingResponse")</setEventAttribute>
            </case>

            <case>
              <!-- Triconex Tristation Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Triconex Tristation Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TriconexTristationCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- TRISIS Detection - File Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[TRISIS Detection - File Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TRISISDetection-FileAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Tristation: Download Change Without Project Version Update -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tristation: Download Change Without Project Version Update]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Tristation_DownloadChangeWithoutProjectVersionUpdate")</setEventAttribute>
            </case>

            <case>
              <!-- Tristation Halt Command -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tristation Halt Command]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TristationHaltCommand")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Tristation Run Command -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tristation Run Command]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TristationRunCommand")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- Tyresense Hardware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Tyresense Hardware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","TyresenseHardware")</setEventAttribute>
            </case>

            <case>
              <!-- User Agent Fingerprinting -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[User Agent Fingerprinting]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","UserAgentFingerprinting")</setEventAttribute>
            </case>

            <case>
              <!-- User Agent QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[User Agent QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","UserAgentQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Vendor Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Vendor Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VendorAnalysis")</setEventAttribute>
            </case>

            <case>
              <!-- Version-specific initialization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Version-specific initialization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Version-specificinitialization")</setEventAttribute>
            </case>

            <case>
              <!-- Video Edge Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Video Edge Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VideoEdgeCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- VLAN Tagging -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VLAN Tagging]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VLANTagging")</setEventAttribute>
            </case>

            <case>
              <!-- VNC Desktop Name -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VNC Desktop Name]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VNCDesktopName")</setEventAttribute>
            </case>

            <case>
              <!-- VNC Server Protocol Version -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VNC Server Protocol Version]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VNCServerProtocolVersion")</setEventAttribute>
            </case>

            <case>
              <!-- VNET Device Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VNET Device Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VNETDeviceIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Vnet Device Stop Detection -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Vnet Device Stop Detection]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VnetDeviceStopDetection")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0875</setEventAttribute>
              <setEventAttribute attr="attackTactic">Execution</setEventAttribute>
            </case>

            <case>
              <!-- VPN Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VPN Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VPNIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- VPNFilter Modbus Module -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VPNFilter Modbus Module]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VPNFilterModbusModule")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0842</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- VTP V1 Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[VTP V1 Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","VTPV1Characterization")</setEventAttribute>
            </case>

            <case>
              <!-- WASSONITE Detection - File Analysis -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[WASSONITE Detection - File Analysis]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WASSONITEDetection-FileAnalysis")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0867</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Web Server Classifier -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Web Server Classifier]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WebServerClassifier")</setEventAttribute>
            </case>

            <case>
              <!-- Web Shell B374k -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Web Shell B374k]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WebShellB374k")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1505/003</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Web Shell Behinder -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Web Shell Behinder]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WebShellBehinder")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0885</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Web Shell P.A.S. Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Web Shell P.A.S. Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WebShellP.A.S.Transfer")</setEventAttribute>
            </case>

            <case>
              <!-- Web Shell SUPERNOVA -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Web Shell SUPERNOVA]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WebShellSUPERNOVA")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Webshell P.A.S. -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Webshell P.A.S.]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WebshellP.A.S.")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Weird Traffic QFD -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Weird Traffic QFD]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WeirdTrafficQFD")</setEventAttribute>
            </case>

            <case>
              <!-- Windows - Network Drive Delete -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows - Network Drive Delete]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Windows-NetworkDriveDelete")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Account Modified Remotely -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Account Modified Remotely]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsAccountModifiedRemotely")</setEventAttribute>
            </case>

            <case>
              <!-- Windows BITSAdmin BITS Jobs -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows BITSAdmin BITS Jobs]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsBITSAdminBITSJobs")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T1197</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Windows Crash Report Identification -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Crash Report Identification]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsCrashReportIdentification")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Credential Editor WCE File Transfer -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Credential Editor WCE File Transfer]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsCredentialEditorWCEFileTransfer")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Windows Event and Service Modifications -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Event and Service Modifications]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsEventandServiceModifications")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0872</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- Windows Event Log Cleared Remotely -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Event Log Cleared Remotely]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsEventLogClearedRemotely")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0872</setEventAttribute>
              <setEventAttribute attr="attackTactic">Evasion</setEventAttribute>
            </case>

            <case>
              <!-- Windows Event Log File Ingest -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Event Log File Ingest]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsEventLogFileIngest")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Events -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Events]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsEvents")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Execution of browdec.exe -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Execution of browdec.exe]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsExecutionofbrowdec.exe")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Execution of klog.exe -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Execution of klog.exe]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsExecutionofklog.exe")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Lateral Movement -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Lateral Movement]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsLateralMovement")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Windows Netstat Command Line -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Netstat Command Line]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsNetstatCommandLine")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0840</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Windows Network Sniffer Command Line -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Network Sniffer Command Line]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsNetworkSnifferCommandLine")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0842</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Windows Process Tampering -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Process Tampering]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsProcessTampering")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Registry Run Key Modify -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Registry Run Key Modify]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsRegistryRunKeyModify")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Remote Account Creation -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Remote Account Creation]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsRemoteAccountCreation")</setEventAttribute>
            </case>

            <case>
              <!-- Windows Scanning Tool Command Line -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Windows Scanning Tool Command Line]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WindowsScanningToolCommandLine")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0846</setEventAttribute>
              <setEventAttribute attr="attackTactic">Discovery</setEventAttribute>
            </case>

            <case>
              <!-- Workstation Classifier -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Workstation Classifier]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WorkstationClassifier")</setEventAttribute>
            </case>

            <case>
              <!-- Workstation Compromise and Action on Objectives -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Workstation Compromise and Action on Objectives]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WorkstationCompromiseandActiononObjectives")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- Workstation Compromise -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Workstation Compromise]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","WorkstationCompromise")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0859</setEventAttribute>
              <setEventAttribute attr="attackTactic">Persistence</setEventAttribute>
            </case>

            <case>
              <!-- XENOTIME -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[XENOTIME]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","XENOTIME")</setEventAttribute>
            </case>

            <case>
              <!-- Xxxx Detected -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[<serviceName:gPatMesgBodyMin> Detected]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_serviceName">replaceStringByRegex($serviceName, "[\s-]+", "")</setEventAttribute>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-", $_serviceName,"Detected")</setEventAttribute>
            </case>

            <case>
              <!-- Yamook malware -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yamook malware]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","Yamookmalware")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0869</setEventAttribute>
              <setEventAttribute attr="attackTactic">Command and Control</setEventAttribute>
            </case>

            <case>
              <!-- Yokogawa CENTUM VP HIS CAMS Log Server DoS -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yokogawa CENTUM VP HIS CAMS Log Server DoS]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","YokogawaCENTUMVPHISCAMSLogServerDoS")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0814</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- Yokogawa CENTUM VP HIS Hidden HTTP Test Account -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yokogawa CENTUM VP HIS Hidden HTTP Test Account]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","YokogawaCENTUMVPHISHiddenHTTPTestAccount")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0812</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Yokogawa CENTUM VP HIS SMB Code Execution -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yokogawa CENTUM VP HIS SMB Code Execution]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","YokogawaCENTUMVPHISSMBCodeExecution")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>

            <case>
              <!-- Yokogawa Device Characterization -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yokogawa Device Characterization]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","YokogawaDeviceCharacterization")</setEventAttribute>
            </case>

            <case>
              <!-- Yokogawa HTTP GET Directory Traversal -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yokogawa HTTP GET Directory Traversal]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","YokogawaHTTPGETDirectoryTraversal")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0882</setEventAttribute>
              <setEventAttribute attr="attackTactic">Impact</setEventAttribute>
            </case>

            <case>
              <!-- Yokogawa HTTP POST Directory Traversal -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Yokogawa HTTP POST Directory Traversal]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","YokogawaHTTPPOSTDirectoryTraversal")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0809</setEventAttribute>
              <setEventAttribute attr="attackTactic">Inhibit Response Function</setEventAttribute>
            </case>

            <case>
              <!-- Zebrocy Outbound C2 Traffic -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[Zebrocy Outbound C2 Traffic]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ZebrocyOutboundC2Traffic")</setEventAttribute>
            </case>

            <case>
              <!-- ZeroLogon Exploit -->
              <collectFieldsByRegex src="$alertCategory">
                <regex><![CDATA[ZeroLogon Exploit]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-","ZeroLogonExploit")</setEventAttribute>
              <setEventAttribute attr="attackTechniqueId">T0866</setEventAttribute>
              <setEventAttribute attr="attackTactic">Lateral Movement</setEventAttribute>
            </case>
            <default>
              <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-Alert")</setEventAttribute>
            </default>
          </switch>
        </when>
        <otherwise>
          <setEventAttribute attr="eventType">combineMsgId("Dragos-", $detection, "-Alert")</setEventAttribute>
        </otherwise>
      </choose>
      <setEventAttribute attr="eventType">replaceStringByRegex($eventType, "\s+", "_")</setEventAttribute>
    </when>

    <when test="exist _createdTime">
      <switch>
        <case>
          <collectFieldsByRegex src="$_createdTime">
            <regex><![CDATA[<_year2:gPatYear>-<_mon2:gPatMon>-<_day2:gPatDay>T<_time2:gPatTime><_zone2:gPatTimeZone>]]></regex>
          </collectFieldsByRegex>
          <setEventAttribute attr="createTime">toDateTime($_mon2, $_day2, $_year2, $_time2, $_zone2)</setEventAttribute>
        </case>
        <default/>
      </switch>
    </when>

    <when test="exist _occurTime">
      <switch>
        <case>
          <collectFieldsByRegex src="$_occurTime">
            <regex><![CDATA[<_year3:gPatYear>-<_mon3:gPatMon>-<_day3:gPatDay>T<_time3:gPatTime><_zone3:gPatTimeZone>]]></regex>
          </collectFieldsByRegex>
          <setEventAttribute attr="eventTime">toDateTime($_mon3, $_day3, $_year3, $_time3, $_zone3)</setEventAttribute>
        </case>
        <default/>
      </switch>
    </when>

    <when test="exist srcIpAddrList">
      <!-- for consistency, try to parse first ip in list to srcIpAddr -->
      <switch>
        <case>
          <collectFieldsByRegex src="$srcIpAddrList">
            <regex><![CDATA[^<srcIpAddr:gPatIpAddr>]]></regex>
          </collectFieldsByRegex>
        </case>
        <default/>
      </switch>
    </when>

    <when test="exist destIpAddrList">
      <switch>
        <case>
          <collectFieldsByRegex src="$destIpAddrList">
            <regex><![CDATA[^<destIpAddr:gPatIpAddr>]]></regex>
          </collectFieldsByRegex>
        </case>
        <default/>
      </switch>
    </when>
    <!-- MACs are returned in lists, try to parse the first one -->
    <when test="exist _srcMACAddr">
      <switch>
        <case>
          <collectFieldsByRegex src="$_srcMACAddr">
            <regex><![CDATA[<srcMACAddr:patMAC>]]></regex>
          </collectFieldsByRegex>
        </case>
        <default/>
      </switch>
    </when>

    <when test="exist _destMACAddr">
      <switch>
        <case>
          <collectFieldsByRegex src="$_destMACAddr">
            <regex><![CDATA[<destMACAddr:patMAC>]]></regex>
          </collectFieldsByRegex>
        </case>
        <default/>
      </switch>
    </when>

    <choose>
      <when test="not_exist _severity"/>
      <when test="$_severity = '0'">
        <setEventAttribute attr="eventSeverity">1</setEventAttribute>
      </when>
      <when test="$_severity = '1'">
        <setEventAttribute attr="eventSeverity">2</setEventAttribute>
      </when>
      <when test="$_severity = '2'">
        <setEventAttribute attr="eventSeverity">4</setEventAttribute>
      </when>
      <when test="$_severity = '3'">
        <setEventAttribute attr="eventSeverity">6</setEventAttribute>
      </when>
      <when test="$_severity = '4'">
        <setEventAttribute attr="eventSeverity">8</setEventAttribute>
      </when>
      <when test="$_severity = '5'">
        <setEventAttribute attr="eventSeverity">10</setEventAttribute>
      </when>
    </choose>

  </parsingInstructions>
</eventParser>
