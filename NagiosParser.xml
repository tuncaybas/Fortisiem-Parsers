<eventParser name="NagiosParser">
  <deviceType>
    <Vendor>Generic</Vendor>
    <Model>Generic</Model>
    <Version>ANY</Version>
  </deviceType>

  <appType>
    <Vendor>Nagios</Vendor>
    <Model>Mgmt Server</Model>
    <Version>ANY</Version>
    <Name>Nagios Server</Name>
  </appType>


  <!--
       2009-09-30 22:10:20 0.0.0.0(via UDP: [192.168.205.7]:46315) TRAP2, SNMPv2c, community public   . Cold Start Trap (0) Uptime: 0:00:00.00 DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (2707651366) 313 days 9:15:13.66      SNMPv2-MIB::snmpTrapOID.0 = OID:SNMPv2-SMI::enterprises.20006.1.5       SNMPv2-SMI::enterprises.20006.1.1.1.2 = STRING: "joeUser" SNMPv2-SMI::enterprises.20006.1.1.1.4 = INTEGER: 1       SNMPv2-SMI::enterprises.20006.1.1.1.14 = STRING: "DOWN" SNMPv2-SMI::enterprises.20006.1.1.1.8 = STRING: "Unknown"}
       2009-09-30 24:10:20 0.0.0.0(via UDP: [192.168.205.7]:46315) TRAP2, SNMPv2c, community public   . Cold Start Trap (0) Uptime: 0:00:00.00 DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (2707651366) 313 days 9:15:13.66      SNMPv2-MIB::snmpTrapOID.0 = OID:SNMPv2-SMI::enterprises.20006.1.7       SNMPv2-SMI::enterprises.20006.1.3.1.2 = STRING: "joeUser" SNMPv2-SMI::enterprises.20006.1.3.1.7 = INTEGER: 1       SNMPv2-SMI::enterprises.20006.1.3.1.17 = STRING: "WARNING" SNMPv2-SMI::enterprises.20006.1.1.1.8 = STRING: "Unknown"}
 -->

  <eventFormatRecognizer><![CDATA[SNMPv2-MIB::snmpTrapOID.0 = OID: SNMPv2-SMI::enterprises.20006]]></eventFormatRecognizer>

  <testEvents>
    <testEvent><![CDATA[2011-04-14 01:43:18 0.0.0.0(via UDP: [192.168.20.214]:45440) TRAP2, SNMP v2c, community public	. Cold Start Trap (0) Uptime: 0:00:00.00	DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (30) 0:00:00.30	SNMPv2-MIB::snmpTrapOID.0 = OID: SNMPv2-SMI::enterprises.20006.1.5	SNMPv2-SMI::enterprises.20006.1.1.1.2 = STRING: "joeUser"	SNMPv2-SMI::enterprises.20006.1.1.1.4 = INTEGER: 0	SNMPv2-SMI::enterprises.20006.1.1.1.14 = STRING: "UP"	SNMPv2-SMI::enterprises.20006.1.1.1.8 = STRING: "Unknown"]]></testEvent>
  </testEvents>

  <parsingInstructions>

    <collectFieldsByRegex src="$_rawmsg">
      <!--
      <regex><![CDATA[<_year:gPatYear>-<_mon:gPatMonNum>-<_day:gPatDay>\s*<_time:gPatTime>.*DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks:\s*\(\d+\)\s*\d+\s*days,\s*\d+:\d+:\d+\.\d+\s+<_body:gPatMesgBody>]]>
      </regex>
    -->
      <regex><![CDATA[<_year:gPatYear>-<_mon:gPatMonNum>-<_day:gPatDay>\s+<_time:gPatTime>\s+.*DISMAN-EVENT-MIB::sysUpTimeInstance\s+=\s+Timeticks:\s+\([\d]+\)(?:\s+[\d]+\s+<:gPatStr>,)?\s+[\d]+:[\d]+:[\d]+\.[\d]+\s+<_body:gPatMesgBody>]]></regex>
    </collectFieldsByRegex>

    <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_year, $_time)</setEventAttribute>
    <setEventAttribute attr="eventType">"Nagios_Generic"</setEventAttribute>
    <setEventAttribute attr="eventSeverity">1</setEventAttribute>
    <setEventAttribute attr="extEventRecvProto">Snmp Trap</setEventAttribute>

    <collectAndSetAttrByKeyValuePair sep="\t" src="$_body">
      <attrKeyMap attr="_eventType" key="SNMPv2-MIB::snmpTrapOID.0 = "/>
      <attrKeyMap attr="hostName" key="SNMPv2-SMI::enterprises.20006.1.1.1.2 = STRING: "/>
      <attrKeyMap attr="_hostState" key="SNMPv2-SMI::enterprises.20006.1.1.1.4 = INTEGER: "/>
      <attrKeyMap attr="hostName" key="SNMPv2-SMI::enterprises.20006.1.3.1.2 = STRING: "/>
      <attrKeyMap attr="_svcHostState" key="SNMPv2-SMI::enterprises.20006.1.3.1.4 = INTEGER: "/>
      <attrKeyMap attr="serviceName" key="SNMPv2-SMI::enterprises.20006.1.3.1.6 = STRING: "/>
      <attrKeyMap attr="_svcState" key="SNMPv2-SMI::enterprises.20006.1.3.1.7 = INTEGER: "/>
      <attrKeyMap attr="infoURL" key="SNMPv2-SMI::enterprises.20006.1.3.1.17 = STRING: "/>
      <attrKeyMap attr="_svcPerfData" key="SNMPv2-SMI::enterprises.20006.1.3.1.18 = STRING: "/>
    </collectAndSetAttrByKeyValuePair>

    <choose>
      <when test="$_eventType = 'OID: SNMPv2-SMI::enterprises.20006.1.5'">
        <choose>
          <when test="$_hostState = '0'">
            <setEventAttribute attr="eventType">"Nagios_Host_Up"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">1</setEventAttribute>
          </when>
          <when test="$_hostState = '1'">
            <setEventAttribute attr="eventType">"Nagios_Host_Down"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">9</setEventAttribute>
          </when>
          <when test="$_hostState = '2'">
            <setEventAttribute attr="eventType">"Nagios_Host_Unreachable"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">7</setEventAttribute>
          </when>
        </choose>
      </when>
      <when test="$_eventType = 'OID: SNMPv2-SMI::enterprises.20006.1.7'">
        <choose>
          <when test="$_svcState = '0'">
            <setEventAttribute attr="eventType">"Nagios_Svc_Up"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">1</setEventAttribute>
          </when>
          <when test="$_svcState = '1'">
            <setEventAttribute attr="eventType">"Nagios_Svc_Warning"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">7</setEventAttribute>
          </when>
          <when test="$_svcState = '2'">
            <setEventAttribute attr="eventType">"Nagios_Svc_Critical"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">9</setEventAttribute>
          </when>
          <when test="$_svcState = '3'">
            <setEventAttribute attr="eventType">"Nagios_Svc_Unknown"</setEventAttribute>
            <setEventAttribute attr="eventSeverity">7</setEventAttribute>
          </when>

        </choose>
      </when>
    </choose>

    <when test="exist infoURL">
      <setEventAttribute attr="destName">extractHostFromURL($infoURL)</setEventAttribute>
    </when>
  </parsingInstructions>
</eventParser>
