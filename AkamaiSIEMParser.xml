<eventParser name="AkamaiSIEMParser">

  <deviceType>
    <Vendor>Akamai</Vendor>
    <Model>Connected Cloud</Model>
    <Version>ANY</Version>
  </deviceType>

  <testEvents>
    <!-- The rule attributes are decoded by phAgentManager -->
    <testEvent><![CDATA[[Akamai:hostname:10.10.10.10] = {"attackData":{"clientIP":"192.0.2.82","configId":"14227","policyId":"qik1_26545","ruleActions":"alert;alert;deny","ruleData":"telnet.exe;telnet.exe;Vector Score: 10, DENY threshold: 9, Alert Rules: 950002:950006, Deny Rule: , Last Matched Message: System Command Injection","ruleMessages":"System Command Access;System Command Injection;Anomaly Score Exceeded for Command Injection","ruleSelectors":"ARGS:option;ARGS:option","ruleTags":"OWASP_CRS/WEB_ATTACK/FILE_INJECTION;OWASP_CRS/WEB_ATTACK/COMMAND_INJECTION;AKAMAI/POLICY/CMD_INJECTION_ANOMALY","ruleVersions":"4;4;1","rules":"950002;950006;CMD-INJECTION-ANOMALY"},"botData":{"botScore":"100","responseSegment":"3"},"clientData":{"appBundleId":"com.mydomain.myapp","appVersion":"1.23","sdkVersion":"4.7.1","telemetryType":"2"},"format":"json","geo":{"asn":"14618","city":"ASHBURN","continent":"288","country":"US","regionCode":"VA"},"httpMessage":{"bytes":"266","host":"www.hmapi.com","method":"GET","path":"/","port":"80","protocol":"HTTP/1.1","query":"option=com_jce%20telnet.exe","requestHeaders":"User-Agent%3a%20BOT%2f0.1%20(BOT%20for%20JCE)%0d%0aAccept%3a%20text%2fhtml,application%2fxhtml+xml,application%2fxml%3bq%3d0.9,*%2f*%3bq%3d0.8%0d%0auniqueID%3a%20CR_H8%0d%0aAccept-Language%3a%20en-US,en%3bq%3d0.5%0d%0aAccept-Encoding%3a%20gzip,%20deflate%0d%0aConnection%3a%20keep-alive%0d%0aHost%3a%20www.hmapi.com%0d%0aContent-Length%3a%200%0d%0a","requestId":"1158db1758e37bfe67b7c09","responseHeaders":"Server%3a%20AkamaiGHost%0d%0aMime-Version%3a%201.0%0d%0aContent-Type%3a%20text%2fhtml%0d%0aContent-Length%3a%20266%0d%0aExpires%3a%20Tue,%2004%20Apr%202017%2010%3a57%3a02%20GMT%0d%0aDate%3a%20Tue,%2004%20Apr%202017%2010%3a57%3a02%20GMT%0d%0aConnection%3a%20close%0d%0aSet-Cookie%3a%20ak_bmsc%3dAFE4B6D8CEEDBD286FB10F37AC7B256617DB580D417F0000FE7BE3580429E23D%7epluPrgNmaBdJqOLZFwxqQLSkGGMy4zGMNXrpRIc1Md4qtsDfgjLCojg1hs2HC8JqaaB97QwQRR3YS1ulk+6e9Dbto0YASJAM909Ujbo6Qfyh1XpG0MniBzVbPMUV8oKhBLLPVSNCp0xXMnH8iXGZUHlUsHqWONt3+EGSbWUU320h4GKiGCJkig5r+hc6V1pi3tt7u3LglG3DloEilchdo8D7iu4lrvvAEzyYQI8Hao8M0%3d%3b%20expires%3dTue,%2004%20Apr%202017%2012%3a57%3a02%20GMT%3b%20max-age%3d7200%3b%20path%3d%2f%3b%20domain%3d.hmapi.com%3b%20HttpOnly%0d%0a","start":"1491303422","status":"200"},"type":"akamai_siem","userRiskData":{"allow":"0","general":"duc_1h:10|duc_1d:30","originUserId":"jsmith007","risk":"udfp:1325gdg4g4343g/M|unp:74256/H","score":"75","status":"0","trust":"ugp:US","username":"jsmith@example.com","uuid":"11111111-1111-1111-1111-111111111111"},"version":"1.0"}]]></testEvent>
  </testEvents>

  <eventFormatRecognizer><![CDATA[^\s*\[Akamai(?::<:gPatStrEndColon>:<:gPatStrRightSB>)?\]\s+=\s+\{]]></eventFormatRecognizer>

  <parsingInstructions>
    <collectFieldsByRegex src="$_rawmsg">
      <regex><![CDATA[^\s*\[Akamai(?::<reptDevName:gPatStrEndColon>:<reptDevIpAddr:gPatStrRightSB>)?\]\s+=\s+<_body:gPatMesgBody>]]></regex>
    </collectFieldsByRegex>

    <setEventAttribute attr="eventType">AKAMAI_SIEM_Generic</setEventAttribute>
    <setEventAttribute attr="extEventRecvProto">AKAMAI_SIEM_API</setEventAttribute>
    <setEventAttribute attr="eventSeverity">1</setEventAttribute>

    <collectAndSetAttrByJSON src="$_body">
      <attrKeyMap attr="_type" key="type"/>
      <attrKeyMap attr="_format" key="format"/>
      <attrKeyMap attr="_version" key="version"/>
      <attrKeyMap attr="clientIpAddr" key="attackData.clientIP"/>
      <attrKeyMap attr="configName" key="attackData.configId"/>
      <attrKeyMap attr="policyId" key="attackData.policyId"/>
      <attrKeyMap attr="ruleName" key="attackData.rules"/>
      <attrKeyMap attr="_ruleTags" key="attackData.ruleTags"/>
      <attrKeyMap attr="action" key="attackData.ruleActions"/>
      <attrKeyMap attr="patternRuleVer" key="attackData.ruleVersions"/>
      <attrKeyMap attr="msg" key="attackData.ruleMessages"/>
      <attrKeyMap attr="httpVersion" key="httpMessage.protocol"/>
      <attrKeyMap attr="httpMethod" key="httpMessage.method"/>
      <attrKeyMap attr="hostName" key="httpMessage.host"/>
      <attrKeyMap attr="appPort" key="httpMessage.port"/>
      <attrKeyMap attr="objectPath" key="httpMessage.path"/>
      <attrKeyMap attr="httpRequestHeaders" key="httpMessage.requestHeaders"/>
      <attrKeyMap attr="httpStatusCode" key="httpMessage.status"/>
      <attrKeyMap attr="totBytes" key="httpMessage.bytes"/>
      <attrKeyMap attr="startTime" key="httpMessage.start"/>
      <attrKeyMap attr="srcGeoContinentCodeStr" key="geo.continent"/>
      <attrKeyMap attr="srcGeoCountry" key="geo.contry"/>
      <attrKeyMap attr="srcGeoCity" key="geo.city"/>
      <attrKeyMap attr="region" key="geo.regionCode"/>
      <attrKeyMap attr="srcASNum32" key="geo.asn"/>
      <attrKeyMap attr="appGroupName" key="clientData.appBundleId"/>
      <attrKeyMap attr="appVersion" key="clientData.appVersion"/>
      <attrKeyMap attr="riskScore" key="userRiskData.score"/>
      <attrKeyMap attr="user" key="userRiskData.username"/>
      <attrKeyMap attr="uuid" key="userRiskData.uuid"/>
      <attrKeyMap attr="userId" key="userRiskData.originUserId"/>
    </collectAndSetAttrByJSON>

    <when test="exist _ruleTags">
      <switch>
        <case>
          <collectFieldsByRegex src="$_ruleTags">
            <regex><![CDATA[^(?:<:gPatMesgBody>/)?<_ruleType:gPatMesgBodyMin>$]]></regex>
          </collectFieldsByRegex>
        </case>
        <default/>
      </switch>
      <setEventAttribute attr="eventType">combineMsgId("AKAMAI_SIEM_", $_ruleType)</setEventAttribute>
    </when>

    <when test="exist riskScore">
      <setEventAttribute attr="eventSeverity">divide($riskScore, 10)</setEventAttribute>
    </when>

    <when test="exist httpRequestHeaders">
      <setEventAttribute attr="httpRequestHeaders">URLDecode($httpRequestHeaders)</setEventAttribute>
    </when>

  </parsingInstructions>

</eventParser>
