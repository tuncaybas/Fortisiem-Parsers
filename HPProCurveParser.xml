<eventParser name="HPProCurveParser">
  <deviceType>
    <Vendor>HP</Vendor>
    <Model>ProCurve</Model>
    <Version>ANY</Version>
  </deviceType>
  <patternDefinitions>
    <pattern name="patLayer" list="begin"><![CDATA[8021X|AAA8021X|AAA8021X AUTH|ACE|ACL|ADDRMGR|AUTH|BOOT|BOOTROM|BUF|CDP|CHASSIS|CONFIG|CONFIG-ILLEGALCHAR|COS|DHC|DHCP|]]></pattern>
    <pattern name="patLayer" list="continue"><![CDATA[DHCPR|DMA|DSNOOP|FF|FILTER|FPANEL|FT|GARP|GVRP|HPESP|IDM|IGMP|INST|IP|IPADDR|IPADDRMGR|IPLOCK|JUMBO|KMS|LACP|LDBAL|LICENSING|]]></pattern>
    <pattern name="patLayer" list="continue"><![CDATA[LLDP|LOOP|MACLOCK|MACLOCKOUT|MGMT|NCL|NETINET|OSPF|PAGP|PIM|PMGR|POEMGR|PPMGR|RADIUS|RL|RTC|SCP|SFLOW|SFTP|SNMP|SNTP|SSH|SSL|]]></pattern>
    <pattern name="patLayer" list="end"><![CDATA[STACK|STP|SYSTEM|TACACS|TCP|TESTMODE|TFTP|TIMEP|TLNT|UDLD|UDPF|UNUSED|USB|VIRUSTH|VLAN|VLS|VOICE|VRRP|WEBMAC|XCVR|XM|XRRP|XXX]]></pattern>
    <pattern name="patMod" list="begin"><![CDATA[802|802.1x|accounting|acl|activate|addrmgr|addrMgr|arp-protect|auth|bootp|cdp|chassis|connfilt|console|cos|dca|dhcp|dhcpr|dhcp-snoop|dhcp-snooping|dhcp v6c|dma|]]></pattern>
    <pattern name="patMod" list="continue"><![CDATA[download|dynamic-ip-lockdown|fault|fdr-log|ffi|FFI|garp|gvrp|hpesp|idm|igmp|inst-mon|ip|ipaddrmgr|iplock|ipx|kms|lacp|ldbal|lldp|loop_protect|macauth|maclock|]]></pattern>
    <pattern name="patMod" list="continue"><![CDATA[mgr|mld|mtm|netinet|ntp|pagp|port-access|ports|port-security|profile-manager|radius|radius-server|ratelim|security|sflow|snmp|sntp|SNTP|ssh|ssl|stack|stp|sys|]]></pattern>
    <pattern name="patMod" list="end"><![CDATA[system|tacacs|tacacs-server|tcp|telnet|tftp|timep|udld|udpf|update|usb|user-profile-mib|vlan|xmodem|Xmodem|amp-server|crypto|dhcp-serv|job|VXLAN-TUN|VXLAN-TUNNEL]]></pattern>
    <pattern name="patRightParenthesis"><![CDATA[[^)]+]]></pattern>
  </patternDefinitions>
  <eventFormatRecognizer><![CDATA[<:gPatMon>\s+<:gPatDay>\s+<:gPatTime>\s+<:gPatIpAddr>\s+(?:(?:<:gPatInt>\s+)?<:patMod>|<:patLayer>)\s*:\s+]]></eventFormatRecognizer>
  <testEvents>
    <testEvent><![CDATA[<14> Mar 15 15:48:09 172.19.99.58 mgr:  SME SSH from 172.17.0.43 - MANAGER Mode]]></testEvent>
    <testEvent><![CDATA[<12> Mar 15 15:48:23 172.19.99.58 snmp: SNMP Security access violation from 172.17.0.5]]></testEvent>
    <testEvent><![CDATA[<12> Mar 15 15:49:25 172.19.99.58 auth:  Invalid user name/password on SSH session]]></testEvent>
    <testEvent><![CDATA[<134> Jan 10 14:03:26 172.16.22.2 00179 mgr: SME TELNET from 10.1.2.91 - MANAGER Mode]]></testEvent>
    <testEvent><![CDATA[<132> Jan 10 14:10:34 172.16.22.2 00419 auth: Invalid user name/password on TELNET session]]></testEvent>
    <testEvent><![CDATA[<15> Aug 28 22:36:06 172.16.1.100 CDP: CDP mCdpCtrl:cdp pkt received on port : 145]]></testEvent>
    <testEvent><![CDATA[<15> Aug 28 22:36:06 172.16.1.100 CDP: CDP mCdpCtrl:received pkt version is 1 and TLV received mask is 3f on port 145.]]></testEvent>
    <testEvent><![CDATA[<15> Aug 28 22:35:30 172.16.1.100 IP : IP  InetServer:s=172.16.1.100 d=172.16.12.131(vl1) xmit]]></testEvent>
    <testEvent><![CDATA[<15> Aug 28 22:43:27 172.16.1.100 IP : IP  mIpPktRecv:s=172.16.12.103(vl1) d=172.16.255.255 recv directed bcast]]></testEvent>
    <testEvent><![CDATA[<15> Aug 28 22:36:06 172.16.1.100 LLDP: LLDP mlldpCtrl:cdp packet received on port : 145]]></testEvent>
  </testEvents>

  <parsingInstructions>
    <!-- sample
<134> Jan 10 14:03:26 172.16.22.2 00179 mgr: SME TELNET from 10.1.2.91 - MANAGER Mode
<132> Jan 10 14:10:34 172.16.22.2 00419 auth: Invalid user name/password on TELNET session
    -->

    <collectFieldsByRegex src="$_rawmsg">
      <regex><![CDATA[<:gPatSyslogPRI>\s*<_mon:gPatMon>\s+<_day:gPatDay>\s+<_time:gPatTime>\s+<reptDevIpAddr:gPatIpAddr>\s+(?:<_eventId:gPatInt>\s+)?<_body:gPatMesgBody>]]></regex>
    </collectFieldsByRegex>

    <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_time)</setEventAttribute>
    <choose>
      <when test="exist _eventId">
        <setEventAttribute attr="eventType">combineMsgId("HP-ProCurve-", $_eventId)</setEventAttribute>
        <choose>
          <when test="$_eventId = '00179'">
            <collectAndSetAttrByRegex src="$_body">
              <regex><![CDATA[SME <:gPatWord> from <srcIpAddr:gPatIpAddr>]]></regex>
            </collectAndSetAttrByRegex>
            <setEventAttribute attr="eventSeverity">1</setEventAttribute>
          </when>

          <when test="$_eventId = '00419'">
            <setEventAttribute attr="eventSeverity">5</setEventAttribute>
          </when>
        </choose>
      </when>
      <otherwise>
        <switch>
          <case>
            <collectFieldsByRegex src="$_body">
              <regex><![CDATA[<_layer:patLayer>\s*:\s+<:patLayer>\s+<:gPatStrEndColon>:<_subBody:gPatMesgBody>]]></regex>
            </collectFieldsByRegex>
          </case>
          <case>
            <collectFieldsByRegex src="$_body">
              <!--<12> Mar 15 15:48:37 172.19.99.58 snmp:  SNMP Security access violation from 172.17.0.5-->
              <regex><![CDATA[<_type:patMod>:\s+SNMP\s+Security\s+access\s+violation\s+from\s+<srcIpAddr:gPatIpAddr>]]></regex>
            </collectFieldsByRegex>
            <setEventAttribute attr="eventType">combineMsgId("HP-ProCurve-", $_type, "-Access-Violation")</setEventAttribute>
          </case>
          <case>
            <collectFieldsByRegex src="$_body">
              <!--<12> Mar 15 16:10:10 172.19.99.58 auth:  Invalid user name/password on SSH session-->
              <regex><![CDATA[<_type:patMod>:\s+Invalid\s+user\s+name/password\s+on\s+<authenMethod:gPatStr>\s+session]]></regex>
            </collectFieldsByRegex>
            <setEventAttribute attr="eventType">HP-ProCurve-00419</setEventAttribute>
          </case>
          <case>
            <collectFieldsByRegex src="$_body">
              <!--<14> Mar 15 16:17:57 172.19.99.58 mgr:  SME SSH from 172.17.0.43 - MANAGER Mode-->
              <regex><![CDATA[<_type:patMod>:\s+SME\s+<authenMethod:gPatStr>\s+from\s+<srcIpAddr:gPatIpAddr>\s+-\s+MANAGER\s+Mode]]></regex>
            </collectFieldsByRegex>
            <setEventAttribute attr="eventType">HP-ProCurve-00179</setEventAttribute>
          </case>
        </switch>
        <when test="exist _subBody">
          <switch>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:36:06 172.16.1.100 CDP: CDP mCdpCtrl:cdp pkt received on port : 145
                  <15> Aug 28 21:35:33 172.16.1.101 LLDP: LLDP mlldpCtrl:lldp pkt received on port : 116
                  <15> Aug 28 22:36:06 172.16.1.100 LLDP: LLDP mlldpCtrl:cdp packet received on port : 145
              -->
                <regex><![CDATA[<:gPatStr>\s+(?:pkt|packet)\s+received\s+on\s+port\s+:\s+<intfName:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Received-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:36:06 172.16.1.100 CDP: CDP mCdpCtrl:received pkt version is 1 and TLV received mask is 3f on port 145.-->
                <regex><![CDATA[^received\s+pkt\s+version\s+is\s+<:gPatInt>\s+and\s+TLV\s+received\s+mask\s+is\s+<:gPatStr>\s+on\s+port\s+<intfName:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Received-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:43:27 172.16.1.100 IP : IP  mIpPktRecv:s=172.16.12.103(vl1) d=172.16.255.255 recv directed bcast
             <15> Aug 28 22:35:32 172.16.1.100 IP : IP  mIpPktRecv:s=172.16.12.131(vl1) d=172.16.1.100 recv-->
                <regex><![CDATA[^s=<srcIpAddr:gPatIpAddr>\(<:patRightParenthesis>\)\s+d=<destIpAddr:gPatIpAddr>\s+recv\s*]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Received-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:35:30 172.16.1.100 IP : IP  InetServer:s=172.16.1.100 d=172.16.12.131(vl1) xmit-->
                <regex><![CDATA[^s=<srcIpAddr:gPatIpAddr>\s+d=<destIpAddr:gPatIpAddr>\(<:patRightParenthesis>\)\s+xmit\s*]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Xmit-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:36:06 172.16.1.100 LLDP: LLDP mlldpCtrl:cdp update on port: 145-->
                <regex><![CDATA[^<:gPatStr>\s+update\s+on\s+port:\s+<intfName:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Update-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 21:35:30 172.16.1.101 LLDP: LLDP mlldpCtrl:delay timer for port : 100 expired-->
                <regex><![CDATA[^delay\s+timer\s+for\s+port\s*:\s+<intfName:gPatInt>\s+expired]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Timer-Expired</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:35:40 172.16.1.100 LLDP: LLDP mlldpCtrl:device status changed : 11-->
                <regex><![CDATA[^device\s+status\s+changed\s+:\s+<:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Device-Status-Changed</setEventAttribute>
            </case>
            <!--<15> Aug 28 22:35:53 172.16.1.100 LLDP: LLDP mlldpCtrl:FTR_LLDP_POEP:POE PowerUpdate (mtype = 2) Recvd 145 Port
                 <15> Aug 28 22:35:40 172.16.1.100 LLDP: LLDP mlldpCtrl:FTR_LLDP_POEP: PowerType, PowerSource, PowerPriority: 2, 1, 3
                 <15> Aug 28 23:43:09 172.16.1.100 LLDP: LLDP mlldpCtrl:FTR_LLDP_POEP: PseAllocPowerValue = 5968,PdReqPowerValue = 0-->
            <case>
              <collectFieldsByRegex src="$_subBody">
                <regex><![CDATA[^FTR_LLDP_POEP:POE\s+PowerUpdate\s+\(mtype\s+=\s+<:gPatInt>\)\s+Recvd\s+<intfName:gPatInt>\s+Port]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">FTR_LLDP_POEP-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <regex><![CDATA[^FTR_LLDP_POEP:\s+PowerType,\s+PowerSource,\s+PowerPriority:\s+]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">FTR_LLDP_POEP-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <regex><![CDATA[^FTR_LLDP_POEP:\s+PseAllocPowerValue\s+=\s+<:gPatInt>,PdReqPowerValue\s+=\s+<:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">FTR_LLDP_POEP-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:35:30 172.16.1.100 LLDP: LLDP mlldpCtrl:lldp : no more MED neighbors-->
                <regex><![CDATA[^<:gPatStr>\s+:\s+no\s+more\s+MED\s+neighbors]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">HasNot-Neighbors</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:35:55 172.16.1.100 LLDP: LLDP mlldpCtrl:lldp refresh pkt sent out port : 1-->
                <regex><![CDATA[^<:gPatStr>\s+refresh\s+pkt\s+sent\s+out\s+port\s+:\s+<intfName:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Sent-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 21:35:33 172.16.1.101 LLDP: LLDP mlldpCtrl:refresh frame on port : 116. Updating neighbor data ...-->
                <regex><![CDATA[^refresh\s+frame\s+on\s+port\s+:\s+<intfName:gPatInt>.\s+Updating\s+neighbor\s+data]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Refreshed-Successful</setEventAttribute>
            </case>
            <case>
              <collectFieldsByRegex src="$_subBody">
                <!--<15> Aug 28 22:35:55 172.16.1.100 LLDP: LLDP mlldpCtrl:transmit rfr packet for port : 1-->
                <regex><![CDATA[^transmit\s+rfr\s+packet\s+for\s+port\s+:\s+<intfName:gPatInt>]]></regex>
              </collectFieldsByRegex>
              <setEventAttribute attr="_action">Transmit-Successful</setEventAttribute>
            </case>
            <default>
              <setEventAttribute attr="_action">Generic</setEventAttribute>
            </default>
          </switch>
        </when>
        <when test="exist _action">
          <setEventAttribute attr="eventType">combineMsgId("HP-ProCurve-", $_layer,"-",$_action)</setEventAttribute>
        </when>
      </otherwise>
    </choose>
  </parsingInstructions>

</eventParser>
