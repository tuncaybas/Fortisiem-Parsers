<eventParser name="PacketFence2Parser">
  <deviceType>
    <Vendor>PacketFence</Vendor>
    <Model>Network Access Control</Model>
    <Version>ANY</Version>
  </deviceType>

  <testEvents>
    <testEvent><![CDATA[<14>May 9 15:06:40 pfnac-03-zrh1 api-frontend[6707]: t=2019-05-09T15:06:40+0100 lvl=info msg="API login for user system for tenant 0" pid=6707 request-uuid=11111111-1111-1111-1111-111111111111]]></testEvent>
    <testEvent><![CDATA[<10>May 9 15:53:14 pfnac-03-zrh1 pfstats[6711]: t=2019-05-09T15:53:14+0100 lvl=crit msg="Error connecting to LDAP source using TLS: unable to read LDAP response packet: read tcp 10.2.225.103:51530->10.9.97.220:636: read: connection reset by peer" pid=6711]]></testEvent>
    <testEvent><![CDATA[<174>May 10 15:11:41 pfnac-03-zrh1 packetfence: INFO pfcmd.pl(10998): Preprocessing filter condition 'MAB' (pf::config::builder::scoped_filter_engines::preprocessCondition)]]></testEvent>
    <testEvent><![CDATA[<30>May 10 16:13:19 pfnac-02-zrh1 pfhttpd: api-frontend-access 127.0.0.1 - - [10/May/2019:16:13:19 +0100] "HEAD / HTTP/1.1" 401 60 "-" "Monit/5.19.0"]]></testEvent>
    <testEvent><![CDATA[<174>May 10 16:28:12 pfnac-01-zrh1 pfmon: pfmon(17273) INFO: [mac:unknown] deleted 0 entries from chi_cache for batch_delete (1557502092 1557502092) (pf::dal::batch_remove)]]></testEvent>
    <testEvent><![CDATA[<14>Jun  3 19:37:57 pfnac-01-zrh1 /usr/local/fingerbank/collector/ t=2019-06-03T19:37:57+0100 lvl=info msg="Persisted endpoints in 3.068914ms" pid=6721]]></testEvent>
    <testEvent><![CDATA[<174>Jun  3 09:48:55 pfnac-02-zrh1 fingerbank: pfqueue(13741) INFO: [mac:f0:5c:19:cb:34:c6] Database /usr/local/fingerbank/db/fingerbank_Upstream.db was changed or handles weren't initialized. Creating handle. (fingerbank::DB::SQLite::build_handle)]]></testEvent>
    <testEvent><![CDATA[<12>Jun  3 12:33:37 pfnac-03-zrh1 /usr/local/fingerbank/collector/ t=2019-06-03T12:33:37+0100 lvl=warn msg="Unable to find endpoint to update. MAC address: " pid=6596]]></testEvent>
    <testEvent><![CDATA[<174>Jun 4 17:26:20 pfnac-03-zrh1 pfqueue: pfqueue(29697) INFO: [mac:unknown] Device Ubuntu/Debian 5/Knoppix 6 is a Linux OS (pf::fingerbank::__ANON__)]]></testEvent>
    <testEvent><![CDATA[<174>Jun 4 17:18:57 pfnac-03-zrh1 httpd_webservices: 10.2.225.101 - get_config_version [04/Jun/2019:17:18:57 +0100] "POST / HTTP/1.1" 200 2496 607 3149 "-" "-" "10.2.225.103:9090"]]></testEvent>
  </testEvents>

  <patternDefinitions>
    <pattern name="patPacketFenceMod"><![CDATA[acct|admin_catalyst|api-frontend|api-frontend-access|auth|fingerbank|httpd_aaa|httpd_webservices|load_balancer|packetfence|packetfence_httpd\.aaa|pfcmd\.pl|pfdhcp|pfdhcplistener|pfhttpd|pfipset|pfmon|pfqueue|pfstats|redis-cache|redis-queue|redis-server]]></pattern>
    <pattern name="patPacketFenceMod2"><![CDATA[/usr/local/fingerbank/collector/]]></pattern>
    <pattern name="patStrEndParen"><![CDATA[[^) ]+]]></pattern>
  </patternDefinitions>

  <eventFormatRecognizer><![CDATA[<:gPatMon>\s+<:gPatDay>\s+<:gPatTime>\s+<:gPatHostName>\s+(?:<:patPacketFenceMod>(?:\[\d+\])?:|<:patPacketFenceMod2>)\s+]]></eventFormatRecognizer>

  <parsingInstructions>
    <collectFieldsByRegex src="$_rawmsg">
      <regex><![CDATA[<_mon:gPatMon>\s+<_day:gPatDay>\s+<_time:gPatTime>\s+(?:<reptDevIpAddr:gPatIpAddr>|<reptDevName:gPatHostName>)\s+<_body:gPatMesgBody>]]></regex>
    </collectFieldsByRegex>

    <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_time)</setEventAttribute>

    <switch>
      <case>
        <collectFieldsByRegex src="$_body">
          <regex><![CDATA[^<:patPacketFenceMod2>\s+<_body:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>
      </case>
      <case>
        <collectFieldsByRegex src="$_body">
          <regex><![CDATA[^<_et:patPacketFenceMod>(?:\[\d+\])?:\s+<_body:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>
      </case>
    </switch>

    <choose>
      <when test="exist _et">
        <setEventAttribute attr="eventType">combineMsgId("PacketFence-NAC-", "$_et")</setEventAttribute>
      </when>
      <otherwise>
        <setEventAttribute attr="eventType">PacketFence-NAC-Generic</setEventAttribute>
      </otherwise>
    </choose>

    <collectAndSetAttrByKeyValuePair sep=" " src="$_body">
      <attrKeyMap attr="_timedate" key="t="/>
      <attrKeyMap attr="_sev" key="lvl="/>
      <attrKeyMap attr="_msg" key="msg="/>
    </collectAndSetAttrByKeyValuePair>

    <choose>
      <when test="not_exist _msg"/>
      <when test="matches($_msg, 'Calling Unified API on uri')">
        <setEventAttribute attr="eventType">PacketFence-NAC-APICall</setEventAttribute>
        <collectFieldsByRegex src="$_msg">
          <regex><![CDATA[Calling Unified API on uri:\s*<targetName:gPatStr>]]></regex>
        </collectFieldsByRegex>
      </when>
      <when test="matches($_msg, 'Error connecting to LDAP')">
        <setEventAttribute attr="eventType">PacketFence-NAC-LDAPFailure</setEventAttribute>
      </when>
      <when test="matches($_msg, 'API login for user system for tenant')">
        <setEventAttribute attr="eventType">PacketFence-NAC-APILogon</setEventAttribute>
      </when>
      <when test="matches($_msg, 'Persisted IP maps')">
        <setEventAttribute attr="eventType">PacketFence-NAC-PersistedIPMaps</setEventAttribute>
      </when>
      <when test="matches($_msg, 'find a peer that has more uptime|Unable to find a peer to sync from')">
        <setEventAttribute attr="eventType">PacketFence-NAC-UnableToSyncFromPeers</setEventAttribute>
      </when>
      <when test="matches($_msg, 'Persisted endpoints')">
        <setEventAttribute attr="eventType">PacketFence-NAC-PersistedEndpoints</setEventAttribute>
      </when>
      <when test="matches($_msg, 'Unable to find endpoint to update')">
        <setEventAttribute attr="eventType">PacketFence-NAC-UnableToFindEndpointToUpdate</setEventAttribute>
      </when>
    </choose>

    <when test="exist _sev">
      <choose>
        <when test="matches($_sev, 'WARN|[Ww]arn')">
          <setEventAttribute attr="eventSeverity">5</setEventAttribute>
        </when>
        <when test="matches($_sev, 'INFO|[Ii]nfo')">
          <setEventAttribute attr="eventSeverity">1</setEventAttribute>
        </when>
        <when test="matches($_sev, 'ERROR|[Ee]rror')">
          <setEventAttribute attr="eventSeverity">8</setEventAttribute>
        </when>
        <when test="matches($_sev, 'CRIT|[Cc]rit')">
          <setEventAttribute attr="eventSeverity">10</setEventAttribute>
        </when>
      </choose>
    </when>
  </parsingInstructions>
</eventParser>
