<eventParser name="TrendMicroOfficeScanJSONParser">
  <deviceType>
    <Vendor>Generic</Vendor>
    <Model>Generic</Model>
    <Version>ANY</Version>
  </deviceType>

  <appType>
    <Vendor>TrendMicro</Vendor>
    <Model>Antivirus Manager</Model>
    <Version>ANY</Version>
    <Name>TrendMicro Antivirus Manager</Name>
  </appType>

  <eventFormatRecognizer><![CDATA[^\s*\{"@tstamp":".+,"msg":".+\bOfficeScan\b]]></eventFormatRecognizer>

  <testEvents>
    <testEvent><![CDATA[{"@tstamp":"2016-04-30T18:17:18+00:00","timereported":"2016-04-30T18:17:18+00:00","timereceived":"2016-05-01T01:17:18.473497+00:00","loghost":"server.com","fromhost":"server.com","fromhostip":"1.1.1.1","severity":"notice","facility":"local0","syslogtag":"TMCM:","vtype":"misc","msg":"SLF_INCIDENT_EVT_GRAYWARE_FOUND_QUARANTINE_SUCCESS Security product=\"OfficeScan\" Security product node=\"server2\" Security product IP=\"2.2.2.2\" Event time=\"5\/1\/2016 1:13:45 AM\" Grayware\/Spyware=\"ADW_OPENCANDY.GB\" Result=\"Access denied\" Infection destination=\"server2\" Infection destination IP=\"server2\" Destination IP=\"\" Source IP=\"\" Domain=\"servers\" ScanMethod=\"Unknown\" Infected file=\"D:\\Home\\user1\\Desktop\\dir\\tools\\badfile.exe\" File path=\"N\/A\" User=\"userA\" Managing server entity=\"server3\""}]]></testEvent>
  </testEvents>

  <parsingInstructions>
    <collectAndSetAttrByJSON src="$_rawmsg">
      <attrKeyMap attr="_eventTime" key="timereported"/>
      <attrKeyMap attr="_deviceTime" key="timereceived"/>
      <attrKeyMap attr="intfName" key="facility"/>
      <attrKeyMap attr="reptDevName" key="fromhost"/>
      <attrKeyMap attr="reptDevIpAddr" key="fromhostip"/>
      <attrKeyMap attr="_severity" key="severity"/>
      <attrKeyMap attr="msg" key="msg"/>
      <attrKeyMap attr="_tag" key="syslogtag"/>
      <attrKeyMap attr="_type" key="vtype"/>
    </collectAndSetAttrByJSON>

    <when test="exist msg">
      <collectFieldsByKeyValuePair sep=" " kvsep="=" src="$msg">
        <attrKeyMap attr="domain" key="Domain"/>
        <attrKeyMap attr="virusName" key="Grayware/Spyware"/>
        <attrKeyMap attr="fileName" key="Infected file"/>
        <attrKeyMap attr="destIpAddr" key="Infection destination IP"/>
        <attrKeyMap attr="destName" key="Infection destination"/>
        <attrKeyMap attr="virusAction" key="Result"/>
        <attrKeyMap attr="srcIpAddr" key="Source IP"/>
        <attrKeyMap attr="user" key="User"/>
      </collectFieldsByKeyValuePair>
    </when>

    <choose>
      <when test="exist virusAction">
        <setEventAttribute attr="_action">replaceStringByRegex($virusAction, "\s+", "-")</setEventAttribute>
        <setEventAttribute attr="eventType">combineMsgId("Trend-AV-", $_action)</setEventAttribute>
      </when>
      <when test="exist _tag">
        <setEventAttribute attr="_tag">replaceStringByRegex($_tag, ":", "")</setEventAttribute>
        <choose>
          <when test="exist _type">
            <setEventAttribute attr="eventType">combineMsgId("Trend-AV-", $_tag, "-", $_type)</setEventAttribute>
          </when>
          <otherwise>
            <setEventAttribute attr="eventType">combineMsgId("Trend-AV-", $_tag)</setEventAttribute>
          </otherwise>
        </choose>
      </when>
      <otherwise>
        <setEventAttribute attr="eventType">Trend-AV-Generic</setEventAttribute>
      </otherwise>
    </choose>

    <when test="exist _eventTime">
      <collectFieldsByRegex src="$_eventTime">
        <regex><![CDATA[<_year:gPatYear>-<_mon:gPatMonNum>-<_day:gPatDay>T<_time:gPatTime><_tz:gPatTimeZone>]]></regex>
      </collectFieldsByRegex>
      <setEventAttribute attr="eventTime">toDateTime($_mon, $_day, $_year, $_time, $_tz)</setEventAttribute>
    </when>

    <when test="exist _deviceTime">
      <collectFieldsByRegex src="$_deviceTime">
        <regex><![CDATA[<_year:gPatYear>-<_mon:gPatMonNum>-<_day:gPatDay>T<_time:gPatTime>\.\d{6}<_tz:gPatTimeZone>]]></regex>
      </collectFieldsByRegex>
      <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_year, $_time, $_tz)</setEventAttribute>
    </when>

    <choose>
      <when test="not_exist _severity"/>
      <when test="$_severity = 'notice'">
        <setEventAttribute attr="eventSeverity">1</setEventAttribute>
      </when>
      <when test="$_severity = 'warning'">
        <setEventAttribute attr="eventSeverity">5</setEventAttribute>
      </when>
      <when test="$_severity = 'error'">
        <setEventAttribute attr="eventSeverity">9</setEventAttribute>
      </when>
    </choose>
  </parsingInstructions>
</eventParser>
