<eventParser name="JunipNSM-SSG">

  <deviceType>
    <Vendor>Generic</Vendor>
    <Model>Generic</Model>
    <Version>ANY</Version>
  </deviceType>

  <appType>
    <Vendor>Juniper</Vendor>
    <Model>NSM</Model>
    <Version>ANY</Version>
    <Name>Network and Security Manager</Name>
  </appType>

  <attachedDeviceType>
    <Vendor>Juniper</Vendor>
    <Model>SSG ScreenOS</Model>
    <Version>ANY</Version>
  </attachedDeviceType>

  <patternDefinitions>
    <pattern name="patLogInOut"><![CDATA[in|out]]></pattern>
    <pattern name="patMethod"><![CDATA[http|https|ssh]]></pattern>
  </patternDefinitions>

  <eventFormatRecognizer><![CDATA[<:gPatSyslogPRI><:gPatMon>\s+<:gPatDay>\s+<:gPatTime>\s+<:gPatIpAddr>\s+<:gPatInt>,\s+<:gPatInt>,\s+<:gPatYear>/<:gPatMon>/<:gPatDay>\s+<:gPatTime>,\s+<:gPatYear>/<:gPatMon>/<:gPatDay>\s+<:gPatTime>,\s+<:gPatStrComma>,\s+<:gPatInt>,\s+<:gPatStrComma>,\s+<:gPatStrComma>,\s+(info|traffic|Sub-Category)]]></eventFormatRecognizer>

  <testEvents>
    <testEvent><![CDATA[<129>Aug 26 11:09:45 213.181.33.233 20090826, 6219282, 2009/08/26 09:09:40, 2009/08/26 08:09:49, global.Randstad, 1363, RandstadWorkaniser-evere1-fw1, 213.181.41.226, traffic, traffic log, untrust, (NULL), 81.243.104.82, 64618, 81.243.104.82, 64618, dmz, (NULL), 213.181.36.162, 443, 213.181.36.162, 443, tcp, global.Randstad, 1363, Workaniser_cleanup, fw/vpn, 34, accepted, info, no, (NULL), (NULL), (NULL), (NULL), 3, 858, 1323, 2181, 0, 0, 14, 1, no, 0, Not]]></testEvent>
    <testEvent><![CDATA[<129>Aug 26 11:09:45 213.181.33.233 20090826, 6219282, 2009/08/26 09:09:40, 2009/08/26 08:09:49, global.Randstad, 1363, RandstadWorkaniser-evere1-fw1, Category, Sub-Category, untrust, (NULL), 81.243.104.82, 64618, 81.243.104.82, 64618, dmz, (NULL), 213.181.36.162, 443, 213.181.36.162, 443, tcp, global.Randstad, 1363, Workaniser_cleanup, fw/vpn, 34, accepted, info, no, (NULL), (NULL), (NULL), (NULL), 3, 858, 1323, 2181, 0, 0, 14, 1, no, 0, Not]]></testEvent>
  </testEvents>


  <parsingInstructions>
    <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG", "-", "Generic")</setEventAttribute>

    <collectFieldsByRegex src="$_rawmsg">
      <regex><![CDATA[<:gPatSyslogPRI>\s*<:gPatMon>\s+<:gPatDay>\s+<:gPatTime>\s+<relayDevIpAddr:gPatIpAddr>\s+<:gPatInt>,\s+<:gPatInt>,\s+<:gPatYear>/<:gPatMon>/<:gPatDay>\s+<:gPatTime>,\s+<_year:gPatYear>/<_mon:gPatMon>/<_day:gPatDay>\s+<_time:gPatTime>,\s+<_traffictype:gPatStrComma>,\s+<:gPatInt>,\s+<reptDevName:gPatStrComma>,\s+<_ipOrCategory:gPatStrComma>,\s+<_body:gPatMesgBody>]]></regex>
    </collectFieldsByRegex>

    <choose>
      <when test="matches($_ipOrCategory, gPatIpAddr)">
        <setEventAttribute attr="reptDevIpAddr">$_ipOrCategory</setEventAttribute>
        <collectFieldsByRegex src="$_body">
          <regex><![CDATA[<_logtype:gPatStrComma>,\s+<_threatname:gPatStrComma>,\s+<_body:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>
      </when>
      <otherwise>
        <collectFieldsByRegex src="$_body">
          <regex><![CDATA[<_logtype:gPatStrComma>,\s+<_body:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>
      </otherwise>
    </choose>

    <when test="$reptDevIpAddr = '0.0.0.0'">
      <setEventAttribute attr="reptDevIpAddr">$relayDevIpAddr</setEventAttribute>
    </when>

    <setEventAttribute attr="deviceTime">toDateTime($_mon, $_day, $_year, $_time)</setEventAttribute>
    <collectAndSetAttrByPos src="$_body" sep=", ">
      <attrPosMap attr="srcFwZone" pos="1"/>
      <attrPosMap attr="_srcIntfName" pos="2"/>
      <attrPosMap attr="srcIpAddr" pos="3"/>
      <attrPosMap attr="srcIpPort" pos="4"/>
      <attrPosMap attr="postNATSrcIpAddr" pos="5"/>
      <attrPosMap attr="postNATSrcIpPort" pos="6"/>
      <attrPosMap attr="destFwZone" pos="7"/>
      <attrPosMap attr="_destIntfName" pos="8"/>
      <attrPosMap attr="preNATDestIpAddr" pos="9"/>
      <attrPosMap attr="preNATDestIpPort" pos="10"/>
      <attrPosMap attr="destIpAddr" pos="11"/>
      <attrPosMap attr="destIpPort" pos="12"/>
      <attrPosMap attr="_proto" pos="13"/>
      <attrPosMap attr="policyName" pos="16"/>
      <attrPosMap attr="_rulebase" pos="17"/>
      <attrPosMap attr="_severity" pos="20"/>
    </collectAndSetAttrByPos>
    <choose>
      <when test="$_severity IN 'info, warning, minor, major, critical, not set'">
        <collectAndSetAttrByPos src="$_body" sep=", ">
          <attrPosMap attr="_action" pos="19"/>
          <attrPosMap attr="_custommsg" pos="23"/>
          <attrPosMap attr="_uriStem" pos="25"/>
          <attrPosMap attr="_connDuration" pos="26"/>
          <attrPosMap attr="sentBytes64" pos="27"/>
          <attrPosMap attr="recvBytes64" pos="28"/>
          <attrPosMap attr="totBytes64" pos="29"/>
          <attrPosMap attr="sentPkts64" pos="30"/>
          <attrPosMap attr="recvPkts64" pos="31"/>
          <attrPosMap attr="totPkts64" pos="32"/>
        </collectAndSetAttrByPos>
      </when>

      <otherwise>
        <!-- for the case they have more than 1 Rule # -->
        <collectAndSetAttrByPos src="$_body" sep=", ">
          <attrPosMap attr="_action" pos="20"/>
          <attrPosMap attr="_severity" pos="21"/>
          <!-- reset -->
          <attrPosMap attr="_custommsg" pos="24"/>
          <attrPosMap attr="_uriStem" pos="26"/>
          <attrPosMap attr="_connDuration" pos="27"/>
          <attrPosMap attr="sentBytes64" pos="28"/>
          <attrPosMap attr="recvBytes64" pos="29"/>
          <attrPosMap attr="totBytes64" pos="30"/>
          <attrPosMap attr="sentPkts64" pos="31"/>
          <attrPosMap attr="recvPkts64" pos="32"/>
          <attrPosMap attr="totPkts64" pos="33"/>
        </collectAndSetAttrByPos>
      </otherwise>
    </choose>

    <setEventAttribute attr="fwAction">$_action</setEventAttribute>

    <when test="$_srcIntfName != '(NULL)'">
      <setEventAttribute attr="srcIntfName">$_srcIntfName</setEventAttribute>
    </when>

    <when test="$_destIntfName != '(NULL)'">
      <setEventAttribute attr="destIntfName">$_destIntfName</setEventAttribute>
    </when>

    <setEventAttribute attr="ipProto">convertStrToIntIpProto($_proto)</setEventAttribute>

    <when test="$_logtype = 'info'">
      <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG-", $_threatname)</setEventAttribute>

      <setEventAttribute attr="errorString">$_custommsg</setEventAttribute>
      <switch>
        <!-- For http login success -->
        <case>
          <collectAndSetAttrByRegex src="$_custommsg">
            <regex><![CDATA[Admin user \"<user:gPatStr>\" logged <_inout:patLogInOut> for Web\(<_method:patMethod>\) management \(port <destIpPort:gPatIpPort>\) from <srcIpAddr:gPatIpAddr>:<srcIpPort:gPatIpPort><:gPatMesgBody>]]></regex>
          </collectAndSetAttrByRegex>

          <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG","-", $_method, "-log",$_inout)</setEventAttribute>
        </case>
        <!-- For More General Case (Trying to include SSH) login success -->
        <case>
          <collectFieldsByRegex src="$_body">
            <regex><![CDATA[Admin user \"<user:gPatStr>\" logged <_inout:patLogInOut> for <_logMeth:gPatStr> from <srcIpAddr:gPatIpAddr>:<srcIpPort:gPatIpPort><:gPatMesgBody>]]></regex>
          </collectFieldsByRegex>

          <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG","-", $_method, "-log",$_inout)</setEventAttribute>
        </case>
        <!-- For everything that starts with "admin" failed logins -->
        <case>
          <collectFieldsByRegex src="$_custommsg">
            <regex><![CDATA[Admin user \"<user:gPatStr>\" login attempt for Web\(<_method:patMethod>\) <_resbody:gPatMesgBody>]]></regex>
          </collectFieldsByRegex>

          <collectFieldsByRegex src="$_resbody">
            <regex><![CDATA[management \(port <destIpPort:gPatIpPort>\) from <srcIpAddr:gPatIpAddr>:<srcIpPort:gPatIpPort> failed.]]></regex>
          </collectFieldsByRegex>
          <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG-", $_method, "-login-fail")</setEventAttribute>
        </case>
        <!-- For everything that start with "ADM", failed logins -->
        <case>
          <collectAndSetAttrByRegex src="$_body">
            <regex><![CDATA[ADM: Local admin authentication failed for login name <user:gPatStr>: invalid <:gPatMesgBody>]]></regex>
          </collectAndSetAttrByRegex>
          <setEventAttribute attr="eventType">Juniper-SSG-local-login-fail</setEventAttribute>
        </case>
        <!-- SSH Login Failure (Guess) -->
        <case>
          <collectAndSetAttrByRegex src="$_body">
            <regex><![CDATA[SSH Password authentication failed for admin user <user:gPatStr> at <:gPatStr> <srcIpAddr:gPatIpAddr><:gPatMesgBody>]]></regex>
          </collectAndSetAttrByRegex>
          <setEventAttribute attr="eventType">Juniper-SSG-ssh-login-fail</setEventAttribute>
        </case>
      </switch>
    </when>

    <when test="$_logtype = 'traffic'">
      <when test="$_threatname = 'traffic log'">
        <choose>
          <when test="$_action = 'accepted'">
            <setEventAttribute attr="eventAction">0</setEventAttribute>
            <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG-traffic", "-", "permit")</setEventAttribute>
          </when>
          <when test="matches($_action, 'dropped')">
            <setEventAttribute attr="eventAction">1</setEventAttribute>
            <setEventAttribute attr="eventType">combineMsgId("Juniper-SSG-traffic", "-", "deny")</setEventAttribute>
          </when>
        </choose>
        <setEventAttribute attr="phEventCategory">4</setEventAttribute>
      </when>
    </when>

    <choose>
      <when test="$_severity = 'info'">
        <setEventAttribute attr="eventSeverity">2</setEventAttribute>
      </when>
      <when test="$_severity = 'warning">
        <setEventAttribute attr="eventSeverity">3</setEventAttribute>
      </when>
      <when test="$_severity = 'minor">
        <setEventAttribute attr="eventSeverity">4</setEventAttribute>
      </when>
      <when test="$_severity = 'major">
        <setEventAttribute attr="eventSeverity">6</setEventAttribute>
      </when>
      <when test="$_severity = 'critical'">
        <setEventAttribute attr="eventSeverity">8</setEventAttribute>
      </when>
      <otherwise>
        <setEventAttribute attr="eventSeverity">1</setEventAttribute>
      </otherwise>
    </choose>

    <!-- User Field is Not Set Correctly, Commenting this out
		<when test="$_custommsg != '(NULL)'">
			<setEventAttribute attr="user">$_custommsg</setEventAttribute>
		</when>
		-->

    <when test="$_uriStem != '(NULL)'">
      <setEventAttribute attr="uriStem">$_uriStem</setEventAttribute>
    </when>

    <setEventAttribute attr="durationMSec">combineMsgId($_connDuration,"000")</setEventAttribute>

    <when test="$postNATSrcIpAddr = '0.0.0.0'">
      <setEventAttribute attr="postNATSrcIpAddr">$srcIpAddr</setEventAttribute>
      <setEventAttribute attr="postNATSrcIpPort">$srcIpPort</setEventAttribute>
    </when>

    <when test="$destIpAddr = '0.0.0.0'">
      <setEventAttribute attr="destIpAddr">$preNATDestIpAddr</setEventAttribute>
      <setEventAttribute attr="destIpPort">$preNATDestIpPort</setEventAttribute>
    </when>

  </parsingInstructions>

</eventParser>
