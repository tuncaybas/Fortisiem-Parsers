<eventParser name="TipPointNMSParser">

  <deviceType>
    <Vendor>TrendMicro</Vendor>
    <Model>TippingPoint UnityOne IPS</Model>
    <Version>ANY</Version>
  </deviceType>

  <patternDefinitions>
    <pattern name="patTipUuidHex"><![CDATA[\w{8}-\w{4}-\w{4}-\w{4}-\w{12}]]></pattern>
    <pattern name="patSep"><![CDATA[[ \t]+]]></pattern>
  </patternDefinitions>

  <eventFormatRecognizer><![CDATA[\d<:patSep>(?:<:gPatStr>\s+)?<:patTipUuidHex>(?:\s+<:patTipUuidHex>)?\s+\d+:\s+<:gPatStrEndColon>:]]></eventFormatRecognizer>

  <testEvents>
    <testEvent><![CDATA[<36> 7 2	11111111-1111-1111-1111-111111111111 11111111-1111-1111-1111-111111111111 1919: Backdoor: Psychward 1919 tcp 10.1.1.100 13013 10.1.1.101 1240 3 3 2 207-2400-Jack 33761793 1109876221622]]></testEvent>
    <testEvent><![CDATA[<37>Oct 19 09:02:54 7   1   11111111-1111-1111-1111-111111111111    11111111-1111-1111-1111-111111111111    28640: TLS: TeamViewer Remote Access Tool Certificate Exchange  28640   tcp 10.1.1.100    443 10.1.1.101    51850   1   n/a n/a 0   0   PP-WAKEN-IPS1   67447036    1508428983580       883776]]></testEvent>
    <testEvent><![CDATA[<34>Aug 16 18:20:15 8 4 UNKNOWN 11111111-1111-1111-1111-111111111111 35528: ZDI-CAN-8561: Zero Day Initiative Vulnerability (Delta Industrial Automation TPEditor) 35528 http 10.1.1.100 1055 10.1.1.101 60000 20 n/a n/a 2 0 ips 33554431 1565979615790 47198]]></testEvent>
  </testEvents>

  <!-- This parser is specially made for Port of Long Beach -->
  <!-- <36> 7 2 11111111-1111-1111-1111-111111111111 11111111-1111-1111-1111-111111111111 1919: Backdoor: Psychward 1919 tcp 10.10.10.100 13013 10.10.10.101 1240 3 3 2 207-2400-example 33761793 1109876221622 -->
  <parsingInstructions>
    <setEventAttribute attr="eventType">Tipp-Generic</setEventAttribute>

    <switch>
      <!-- Message with no header NMS format -->
      <case>
        <collectFieldsByRegex src="$_rawmsg">
          <regex><![CDATA[<:gPatSyslogPRI><:patSep><_action:gPatInt><:patSep><_severity:gPatInt><:patSep><:patTipUuidHex><:patSep><:patTipUuidHex><:patSep><:gPatMesgBody><:patSep><_tiptype:gPatInt><:patSep><appTransportProto:gPatProto><:patSep><srcIpAddr:gPatIpAddr><:patSep><srcIpPort:gPatInt><:patSep><destIpAddr:gPatIpAddr><:patSep><destIpPort:gPatInt><:patSep><count:gPatInt><:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>

        <setEventAttribute attr="eventType">combineMsgId("Tipp", "_", "IPS", "-", $_tiptype)</setEventAttribute>
      </case>
      <!-- Message with no header and a single digit separator right after syslog PRI symbol NMS format -->
      <case>
        <collectFieldsByRegex src="$_rawmsg">
          <regex><![CDATA[<:gPatSyslogPRI><_action:gPatInt><:patSep><_severity:gPatInt><:patSep><:patTipUuidHex><:patSep><:patTipUuidHex><:patSep><:gPatMesgBody><:patSep><_tiptype:gPatInt><:patSep><appTransportProto:gPatProto><:patSep><srcIpAddr:gPatIpAddr><:patSep><srcIpPort:gPatInt><:patSep><destIpAddr:gPatIpAddr><:patSep><destIpPort:gPatInt><:patSep><count:gPatInt><:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>

        <setEventAttribute attr="eventType">combineMsgId("Tipp", "_", "IPS", "-", $_tiptype)</setEventAttribute>
      </case>
      <!-- Message with syslog event header NMS format -->
      <case>
        <collectFieldsByRegex src="$_rawmsg">
          <regex><![CDATA[<:gPatSyslogPRI><_mon:gPatMon>\s+<_day:gPatDay>\s+<_time:gPatTime>\s+<:gPatStr>?<:patSep><_action:gPatInt><:patSep><_severity:gPatInt><:patSep><:patTipUuidHex><:patSep><:patTipUuidHex><:patSep><:gPatMesgBody><:patSep><_tiptype:gPatInt><:patSep><appTransportProto:gPatProto><:patSep><srcIpAddr:gPatIpAddr><:patSep><srcIpPort:gPatInt><:patSep><destIpAddr:gPatIpAddr><:patSep><destIpPort:gPatInt><:patSep><count:gPatInt><:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>

        <setEventAttribute attr="eventType">combineMsgId("Tipp", "_", "IPS", "-", $_tiptype)</setEventAttribute>
      </case>

      <case>
        <collectFieldsByRegex src="$_rawmsg">
          <regex><![CDATA[<:gPatSyslogPRI><_mon:gPatMon>\s+<_day:gPatDay>\s+<_time:gPatTime>\s+<_action:gPatInt><:patSep><_severity:gPatInt><:patSep><:gPatStr>\s+<:patTipUuidHex><:patSep><:gPatMesgBody><:patSep><_tiptype:gPatInt><:patSep><appTransportProto:gPatProto><:patSep><srcIpAddr:gPatIpAddr><:patSep><srcIpPort:gPatInt><:patSep><destIpAddr:gPatIpAddr><:patSep><destIpPort:gPatInt><:patSep><count:gPatInt><:gPatMesgBody>]]></regex>
        </collectFieldsByRegex>

        <setEventAttribute attr="eventType">combineMsgId("Tipp", "_", "IPS", "-", $_tiptype)</setEventAttribute>
      </case>
    </switch>

    <when test="$_action = '7'">
      <setEventAttribute attr="remedyAction">"Permit"</setEventAttribute>
    </when>

    <when test="$_action = '8'">
      <setEventAttribute attr="remedyAction">"Block"</setEventAttribute>
    </when>

    <when test="$_action = '9'">
      <setEventAttribute attr="remedyAction">"P2P"</setEventAttribute>
    </when>

    <when test="$_severity = '2'">
      <setEventAttribute attr="eventSeverity">3</setEventAttribute>
    </when>

    <when test="$_severity = '4'">
      <setEventAttribute attr="eventSeverity">9</setEventAttribute>
    </when>

  </parsingInstructions>

</eventParser>
